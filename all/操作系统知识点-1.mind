{"root":{"data":{"id":"dao0ngsqnc80","created":1750083012252,"text":"操作系统"},"children":[{"data":{"id":"dao0q2javww0","created":1750083216299,"text":"计算机系统概述","expandState":"expand"},"children":[{"data":{"id":"dao0s7u10co0","created":1750083384559,"text":"操作系统的基本概念","expandState":"expand"},"children":[{"data":{"id":"dao0wjkl3gw0","created":1750083723567,"text":"操作系统的概念、功能","expandState":"expand"},"children":[{"data":{"id":"dao0zdaduk80","created":1750083944981,"text":"概念（定义）"},"children":[{"data":{"id":"dao0zuo9zhc0","created":1750083982827,"text":"负责管理协调硬件、软件等计算机资源的工作"},"children":[]},{"data":{"id":"dao0zvb31i80","created":1750083984206,"text":"为上层用户、应用程序提供简单易用的服务"},"children":[]},{"data":{"id":"dao0zw0cxig0","created":1750083985734,"text":"是一种系统软件"},"children":[]}]},{"data":{"id":"dao0zea3aoo0","created":1750083947141,"text":"功能和目标"},"children":[{"data":{"id":"dao0zxjgqk80","created":1750083989066,"text":"资源的管理者"},"children":[{"data":{"id":"dao11o4o23k0","created":1750084125309,"text":"处理机管理"},"children":[]},{"data":{"id":"dao11oowrns0","created":1750084126533,"text":"存储器管理"},"children":[]},{"data":{"id":"dao11ph804g0","created":1750084128245,"text":"文件管理"},"children":[]},{"data":{"id":"dao11qboa4w0","created":1750084130086,"text":"设备管理"},"children":[]}]},{"data":{"id":"dao0zyoehko0","created":1750083991542,"text":"向上层提供服务"},"children":[{"data":{"id":"dao14utypy80","created":1750084374992,"text":"给普通用户用的"},"children":[{"data":{"id":"dao17bs62000","created":1750084568617,"text":"GUI用户图形界面"},"children":[]},{"data":{"id":"dao17d2i0ow0","created":1750084571418,"text":"命令接口"},"children":[{"data":{"id":"dao184dxo540","created":1750084630883,"text":"联机命令接口"},"children":[]},{"data":{"id":"dao18j0yi340","created":1750084662750,"text":"脱机命令接口"},"children":[]}]}]},{"data":{"id":"dao156n2ig80","created":1750084400696,"text":"给软件/程序员用的"},"children":[{"data":{"id":"dao16n163fc0","created":1750084514741,"text":"程序接口"},"children":[{"data":{"id":"dao17w58oag0","created":1750084612943,"text":"即系统调用"},"children":[]}]}]}]},{"data":{"id":"dao0zzdjuz40","created":1750083993062,"text":"对硬件机器的扩展"},"children":[{"data":{"id":"dao194yod2g0","created":1750084710501,"text":"扩充机器"},"children":[]}]}]}]},{"data":{"id":"dao0wrs619s0","created":1750083741439,"text":"操作系统的特征","expandState":"expand"},"children":[{"data":{"id":"dao19kwpc800","created":1750084745210,"text":"并发"},"children":[]},{"data":{"id":"dao19lmqlxc0","created":1750084746784,"text":"共享"},"children":[{"data":{"id":"dao1a8uf3qg0","created":1750084797315,"text":"互斥共享方式（如对摄像头设备的共享使用）"},"children":[]},{"data":{"id":"dao1a9mco2o0","created":1750084799004,"text":"同时共享方式（如对硬盘资源的共享使用）"},"children":[]}]},{"data":{"id":"dao19m0rpwg0","created":1750084747633,"text":"虚拟"},"children":[{"data":{"id":"dao1buy732o0","created":1750084923797,"text":"空分复用技术（如虚拟存储技术）"},"children":[]},{"data":{"id":"dao1by69gfk0","created":1750084930815,"text":"时分复用技术（如虚拟处理器技术）"},"children":[]}]},{"data":{"id":"dao19mdeq3s0","created":1750084748397,"text":"异步"},"children":[]}]}]},{"data":{"id":"dao0seq7l1k0","created":1750083399566,"text":"操作系统发展历程","expandState":"expand"},"children":[{"data":{"id":"dao1co59sv40","created":1750084987351,"text":"手工操作阶段","expandState":"expand"},"children":[{"data":{"id":"dao1hy1mpzs0","created":1750085400720,"text":"缺点：人机速度矛盾"},"children":[]}]},{"data":{"id":"dao1cptovxk0","created":1750084991004,"text":"批处理阶段","expandState":"expand"},"children":[{"data":{"id":"dao1d9zdczc0","created":1750085034883,"text":"单道批处理系统（引入脱机输入输出技术）"},"children":[{"data":{"id":"dao1i5hdhw00","created":1750085416909,"text":"优点：缓解人机速度矛盾"},"children":[]},{"data":{"id":"dao1i6ior2g0","created":1750085419165,"text":"缺点：资源利用率依然很低"},"children":[]}]},{"data":{"id":"dao1dafu9a00","created":1750085035879,"text":"多段批处理系统（操作系统开始出现）"},"children":[{"data":{"id":"dao1iwd99ew0","created":1750085475433,"text":"优点：多道程序并发执行，资源利用率高"},"children":[]},{"data":{"id":"dao1iwyvry00","created":1750085476741,"text":"缺点：不提供人机交互功能"},"children":[]}]}]},{"data":{"id":"dao1cqva33c0","created":1750084993277,"text":"分时操作系统","expandState":"expand"},"children":[{"data":{"id":"dao1haas7x40","created":1750085349030,"text":"优点：提供人机交互功能"},"children":[]},{"data":{"id":"dao1hav5rlc0","created":1750085350262,"text":"缺点：不能优先处理紧急任务"},"children":[]}]},{"data":{"id":"dao1cre0zj40","created":1750084994411,"text":"实时操作系统","expandState":"expand"},"children":[{"data":{"id":"dao1ex52ax40","created":1750085163658,"text":"硬实时系统"},"children":[{"data":{"id":"dao1fh1js8o0","created":1750085206981,"text":"必须在绝对严格的规定时间内完成处理"},"children":[{"data":{"id":"dao1g48x24w0","created":1750085257493,"text":"如：导弹控制系统、自动驾驶系统"},"children":[]}]}]},{"data":{"id":"dao1exzfkv40","created":1750085165494,"text":"软实时系统"},"children":[{"data":{"id":"dao1f2lf3q80","created":1750085175531,"text":"能接受偶尔违反时间规定"},"children":[{"data":{"id":"dao1gijv2hs0","created":1750085288629,"text":"如：12306火车订票系统"},"children":[]}]}]},{"data":{"id":"dao1gx61lgw0","created":1750085320445,"text":"优点：能优先处理紧急任务"},"children":[]}]},{"data":{"id":"dao1cs88usg0","created":1750084996238,"text":"网络操作系统"},"children":[]},{"data":{"id":"dao1css9da80","created":1750084997448,"text":"分布式操作系统"},"children":[]},{"data":{"id":"dao1ctccdbs0","created":1750084998663,"text":"个人计算机操作系统"},"children":[]}]},{"data":{"id":"dao0sgg2iag0","created":1750083403306,"text":"操作系统的运行环境","expandState":"expand"},"children":[{"data":{"id":"dao0xprnfhk0","created":1750083815419,"text":"操作系统的运行机制","expandState":"expand"},"children":[{"data":{"id":"dao1mwykrjk0","created":1750085790179,"text":"简单了解程序的运行原理"},"children":[{"data":{"id":"dao1oterljk0","created":1750085939179,"text":"高级语言编写代码——>机器指令"},"children":[]},{"data":{"id":"dao1oudiphc0","created":1750085941280,"text":"程序运行的过程就是CPU执行指令的过程"},"children":[]}]},{"data":{"id":"dao1jxoqn2w0","created":1750085556668,"text":"两种程序"},"children":[{"data":{"id":"dao1kx67tjc0","created":1750085633913,"text":"内核程序"},"children":[]},{"data":{"id":"dao1kxv3ny00","created":1750085635417,"text":" 应用程序","layout":null},"children":[]}]},{"data":{"id":"dao1jrvuxdc0","created":1750085544038,"text":"两种指令"},"children":[{"data":{"id":"dao1k07oj0g0","created":1750085562167,"text":"特权指令"},"children":[]},{"data":{"id":"dao1k0q6uf40","created":1750085563286,"text":"非特权指令"},"children":[]}]},{"data":{"id":"dao1jx0q9js0","created":1750085555217,"text":"两种处理器状态"},"children":[{"data":{"id":"dao1khx9aag0","created":1750085600719,"text":"内核态/核心态/管态","layout_right_offset":{"x":-2.499999925494194,"y":6.249999813735371}},"children":[]},{"data":{"id":"dao1kifskhk0","created":1750085601840,"text":"用户态/目态"},"children":[]}]},{"data":{"id":"dao1n8lsu400","created":1750085815528,"text":"内核"},"children":[{"data":{"id":"dao1pxqbt9s0","created":1750086026949,"text":"内核（Kernel）是操作系统最重要最核心的部分"},"children":[]},{"data":{"id":"dao1pyfpzts0","created":1750086028485,"text":"由很多内核程序组成操作系统内核"},"children":[]}]},{"data":{"id":"dao1ncwbcrk0","created":1750085824871,"text":"如何变态？"},"children":[{"data":{"id":"dao1r1f343c0","created":1750086113341,"text":"内核态——>用户态"},"children":[{"data":{"id":"dao1riodhls0","created":1750086150908,"text":"一条修改PSW的特权指令"},"children":[]}]},{"data":{"id":"dao1r1rahpc0","created":1750086114079,"text":"用户态——>内核态"},"children":[{"data":{"id":"dao1rktndgg0","created":1750086155580,"text":"由中断引起，硬件自动完成"},"children":[]}]}]}]},{"data":{"id":"dao0xqhnfmw0","created":1750083816991,"text":"中断和异常","expandState":"expand"},"children":[{"data":{"id":"dao1sgcqgfk0","created":1750086224215,"text":"中断的作用"},"children":[{"data":{"id":"dao1xbioyww0","created":1750086605512,"text":"让操作系统内核强行夺回CPU的控制权"},"children":[]},{"data":{"id":"dao1xby2xow0","created":1750086606442,"text":"使CPU从用户态变为内核态"},"children":[]}]},{"data":{"id":"dao1sh6f5gg0","created":1750086226010,"text":"中断的类型"},"children":[{"data":{"id":"dao1srh6yw00","created":1750086248429,"text":"内中断（也称异常、例外）"},"children":[{"data":{"id":"dao1ut2vcgw0","created":1750086408645,"text":"与当前执行的指令有关，中断信号的来自CPU内部"},"children":[{"data":{"id":"dao1vzutvlk0","created":1750086501760,"text":"陷阱、陷入（trap）"},"children":[]},{"data":{"id":"dao1w0iejgw0","created":1750086503186,"text":"故障（fault）"},"children":[]},{"data":{"id":"dao1w0ygfj40","created":1750086504156,"text":"终止（abort）"},"children":[]}]}]},{"data":{"id":"dao1ss4ke2w0","created":1750086249842,"text":"外中断（也称“中断”）"},"children":[{"data":{"id":"dao1vgoo01c0","created":1750086460029,"text":"与当前执行的指令无关，中断信号的来自CPU外部"},"children":[{"data":{"id":"dao1w2xq5m80","created":1750086508466,"text":"时钟中断"},"children":[]},{"data":{"id":"dao1w3g9z880","created":1750086509587,"text":"I/O中断请求"},"children":[]}]}]}]},{"data":{"id":"dao1shp71i80","created":1750086227145,"text":"中断机制的基本原理"},"children":[{"data":{"id":"dao1yji8hns0","created":1750086701263,"text":"检查中断信号"},"children":[{"data":{"id":"dao1yqk9h4w0","created":1750086716623,"text":"内中断：CPU在执行指令时会检查是否有异常发生"},"children":[]},{"data":{"id":"dao1yqyq4f40","created":1750086717497,"text":"外中断：每个指令周期末尾，CPU都会检查是否有外中断信号需要处理"},"children":[]}]},{"data":{"id":"dao1yk2c41c0","created":1750086702478,"text":"找到相应的中断处理程序"},"children":[{"data":{"id":"dao20inkshs0","created":1750086856137,"text":"通过“中断向量表”实现"},"children":[]}]}]}]},{"data":{"id":"dao0xrwkov40","created":1750083820070,"text":"系统调用","expandState":"expand"},"children":[{"data":{"id":"dao2314ohfk0","created":1750087053082,"text":"什么是系统调用？"},"children":[{"data":{"id":"dao23axmfmw0","created":1750087074423,"text":"操作系统对应用程序/程序员提供的接口"},"children":[]}]},{"data":{"id":"dao231wxjmo0","created":1750087054790,"text":"系统调用与库函数的区别"},"children":[{"data":{"id":"dao240yb4cg0","created":1750087131061,"text":"有的库函数是对系统调用的进一步封装"},"children":[]},{"data":{"id":"dao241fchdk0","created":1750087132091,"text":"有的库函数没有使用系统调用"},"children":[]}]},{"data":{"id":"dao232hdehs0","created":1750087056026,"text":"小例子：为什么系统调用是必须的？"},"children":[{"data":{"id":"dao25alxom80","created":1750087230444,"text":"Word和WPS同时打印"},"children":[]}]},{"data":{"id":"dao232znync0","created":1750087057132,"text":"什么功能要用系统调用实现？"},"children":[{"data":{"id":"dao25y2ebh40","created":1750087281506,"text":"设备管理"},"children":[]},{"data":{"id":"dao25z14x5k0","created":1750087283606,"text":"文件管理"},"children":[]},{"data":{"id":"dao25z7rqi80","created":1750087284008,"text":"进程管理"},"children":[]},{"data":{"id":"dao25zortv40","created":1750087285036,"text":"进程通信"},"children":[]},{"data":{"id":"dao2605hzfk0","created":1750087286047,"text":"内存管理"},"children":[]}]},{"data":{"id":"dao233h6tdk0","created":1750087058192,"text":"系统调用的过程"},"children":[{"data":{"id":"dao26z9cbr40","created":1750087362467,"text":"传参"},"children":[]},{"data":{"id":"dao2703s4b40","created":1750087364307,"text":"陷入指令/Trap/访管"},"children":[]},{"data":{"id":"dao27177aqg0","created":1750087366691,"text":"由操作系统内核程序处理系统调用请求"},"children":[]},{"data":{"id":"dao271u2i3k0","created":1750087368074,"text":"返回应用程序"},"children":[]}]}]},{"data":{"id":"dao0xsjwp9c0","created":1750083821481,"text":"番外篇：中国古代的操作系统"},"children":[]}]},{"data":{"id":"dao0sjkz15c0","created":1750083410133,"text":"操作系统结构","expandState":"expand"},"children":[{"data":{"id":"dao29d6exlc0","created":1750087549493,"text":"操作系统的内核","expandState":"expand"},"children":[{"data":{"id":"dao29yj6pi80","created":1750087595978,"text":"时钟管理"},"children":[{"data":{"id":"dao2a7s84io0","created":1750087616115,"text":"实现计时功能"},"children":[]}]},{"data":{"id":"dao29zgxpns0","created":1750087598018,"text":"中断处理"},"children":[{"data":{"id":"dao2a654eeo0","created":1750087612542,"text":"负责实现中断机制"},"children":[]}]},{"data":{"id":"dao2a06b8lc0","created":1750087599553,"text":"原语"},"children":[{"data":{"id":"dao2a2ikm000","created":1750087604648,"text":"是一种特殊的程序"},"children":[]},{"data":{"id":"dao2a3kjpgg0","created":1750087606944,"text":"处于操作系统最底层，是最接近硬件的部分"},"children":[]},{"data":{"id":"dao2a3z8a5c0","created":1750087607832,"text":"这种程序的运行具有原子性——其运行只能一气呵成，不可中断"},"children":[]},{"data":{"id":"dao2a4e2pi00","created":1750087608729,"text":"运行时间较短、调用频繁"},"children":[]}]},{"data":{"id":"dao2a0qws080","created":1750087600798,"text":"对系统资源进行管理的功能"},"children":[{"data":{"id":"daolfpvwucg0","created":1750141648429,"text":"进程管理"},"children":[]},{"data":{"id":"daolfsto75k0","created":1750141654824,"text":"存储器管理"},"children":[]},{"data":{"id":"daolfqfr3y80","created":1750141649629,"text":"设备管理"},"children":[]}]}]},{"data":{"id":"dao29dqcoc80","created":1750087550699,"text":"操作系统体系结构","expandState":"expand"},"children":[{"data":{"id":"dao29qzf37s0","created":1750087579545,"text":"大内核（又名：宏内核/单内核）"},"children":[{"data":{"id":"daolhpc6so00","created":1750141803965,"text":"将操作系统的主要功能模块都作为系统内核，运行在核心态，所有的系统功能都放在内核里(大内核结构的OS通常也采用了\"模块化\"的设计思想）"},"children":[]},{"data":{"id":"daolhpwoo2g0","created":1750141805204,"text":"优点：高性能，内核内部各种功能都可以直接相互调用 "},"children":[]},{"data":{"id":"daolhqc11e80","created":1750141806132,"text":"缺点"},"children":[{"data":{"id":"daom49r9u1k0","created":1750143572424,"text":"1.内核庞大功能复杂，难以维护"},"children":[]},{"data":{"id":"daom4aepfvk0","created":1750143573841,"text":"2.大内核中某个功能模块出错，就可能导致整个系统崩溃"},"children":[]}]}]},{"data":{"id":"dao29rl2w800","created":1750087580855,"text":"微内核"},"children":[{"data":{"id":"daolhry3aio0","created":1750141809643,"text":"只把中断、原语、进程通信等最核心的功能放入内核。进程管理、文件管理、设备管理等功能以用户进程的形式运行在用户态 "},"children":[]},{"data":{"id":"daolht2lrc00","created":1750141812093,"text":"优点"},"children":[{"data":{"id":"daom7gmwdeo0","created":1750143822490,"text":"1.内核小功能少、易于维护，内核可靠性高 "},"children":[]},{"data":{"id":"daom7guxilc0","created":1750143822976,"text":"2.内核外的某个功能模块出错不会导致整个系统崩溃 "},"children":[]}]},{"data":{"id":"daolht9q6bc0","created":1750141812523,"text":"缺点"},"children":[{"data":{"id":"daom7lds6uw0","created":1750143832823,"text":"1. 性能低，需要频繁的切换 用户态/核心态。用户态下的各功能模块不可以直接相互调用，只能通过内核的\"消息传递\"来间接通信"},"children":[]},{"data":{"id":"daom7lliztc0","created":1750143833291,"text":"2.用户态下的各功能模块不可以直接相互调用，只能通过内核的\"消息传递\"来间接通信"},"children":[]}]}]},{"data":{"id":"dao29rza0wo0","created":1750087581713,"text":"分层结构"},"children":[{"data":{"id":"daollnktfk80","created":1750142113590,"text":"内核分多层，每层可单向调用更低一层提供的接口"},"children":[]},{"data":{"id":"daollqd53z40","created":1750142119656,"text":"优点"},"children":[{"data":{"id":"daolm3xn6u80","created":1750142149194,"text":"1.便于调试和验证，自底向上逐层调试验证"},"children":[]},{"data":{"id":"daolm4al6740","created":1750142149977,"text":"2.易扩充和易维护，各层之间调用接口清晰固定"},"children":[]}]},{"data":{"id":"daollsbrzhs0","created":1750142123927,"text":"缺点"},"children":[{"data":{"id":"daolmvscvi80","created":1750142209824,"text":"1.仅可调用相邻低层，难以合理定义各层的边界"},"children":[]},{"data":{"id":"daolmvxxnf40","created":1750142210161,"text":"2.效率低，不可跨层调用，系统调用执行时间长"},"children":[]}]}]},{"data":{"id":"dao29siyszc0","created":1750087582904,"text":"模块化"},"children":[{"data":{"id":"daolwq8ywvs0","created":1750142981410,"text":"特性、思想"},"children":[{"data":{"id":"daolymrujlk0","created":1750143130572,"text":"将内核划分为多个模块，各模块之间相互协作。"},"children":[]},{"data":{"id":"daolzg0wzu00","created":1750143194247,"text":"内核=主模块+可加载内核模块"},"children":[]},{"data":{"id":"daolwudx6yo0","created":1750142990416,"text":"主模块:只负责核心功能，如进程调度、内存管理"},"children":[]},{"data":{"id":"daolwulbi7c0","created":1750142990864,"text":"可加载内核模块:可以动态加载新模块到内核，而无需重新编译整个内核 "},"children":[]}]},{"data":{"id":"daolwrnohy80","created":1750142984476,"text":"优点"},"children":[{"data":{"id":"daolwwu6x2w0","created":1750142995754,"text":"1.模块间逻辑清晰易于维护，确定模块间接口后即可多模块同时开发"},"children":[]},{"data":{"id":"daolwx9dwxc0","created":1750142996672,"text":"2.支持动态加载新的内核模块(如:安装设备驱动程序、安装新的文件系统模块到内核)，增强OS适应性"},"children":[]},{"data":{"id":"daolwxorbhc0","created":1750142997602,"text":"3.任何模块都可以直接调用其他模块，无需采用消息传递进行通信，效率高"},"children":[]}]},{"data":{"id":"daolws5tlu80","created":1750142985573,"text":"缺点"},"children":[{"data":{"id":"daolwz22ym00","created":1750143000584,"text":"1.模块间的接口定义未必合理、实用"},"children":[]},{"data":{"id":"daolwzipqk00","created":1750143001590,"text":"2.模块间相互依赖，更难调试和验证"},"children":[]}]}]},{"data":{"id":"dao29tb440w0","created":1750087584606,"text":"外核"},"children":[{"data":{"id":"daomadhfpzc0","created":1750144050722,"text":"内核负责进程调度、进程通信等功能，外核负责为用户进程分配未经抽象的硬件资源，且由外核负责保证资源使用安全"},"children":[]},{"data":{"id":"daomae2pjeo0","created":1750144052008,"text":"优点"},"children":[{"data":{"id":"daomap9edvk0","created":1750144076357,"text":"1.外核可直接给用户进程分配\"不虚拟、不抽象\"的硬件资源，使用户进程可以更灵活的使用硬件资源"},"children":[]},{"data":{"id":"daomapff8480","created":1750144076721,"text":"2.减少了虚拟硬件资源的\"映射层\"，提升效率 "},"children":[]}]},{"data":{"id":"daomaehvajk0","created":1750144052925,"text":"缺点"},"children":[{"data":{"id":"daomaqnoe7k0","created":1750144079397,"text":"1.降低了系统的一致性 "},"children":[]},{"data":{"id":"daomaqv2nb40","created":1750144079844,"text":"2.使系统变得更复杂"},"children":[]}]}]}]}]},{"data":{"id":"dao0smb3ur40","created":1750083416067,"text":"操作系统引导","expandState":"expand"},"children":[{"data":{"id":"daomo73weow0","created":1750145133941,"text":"什么是操作系统引导？"},"children":[]},{"data":{"id":"daomo7k34bc0","created":1750145134920,"text":"磁盘里边有哪些相关数据？"},"children":[]},{"data":{"id":"daomo87cwhk0","created":1750145136327,"text":"操作系统引导的过程"},"children":[]}]},{"data":{"id":"dao0snk5sc80","created":1750083418791,"text":"虚拟机","expandState":"expand"},"children":[{"data":{"id":"daon7bpighk0","created":1750146632874,"text":"虚拟机是指利用虚拟化技术，将一台物理机器虚拟化为多台虚拟机器，通过隐藏特定计算平台的实际物理特性，为用户提供抽象的、统一的、模拟的计算环境"},"children":[]},{"data":{"id":"daon7cryf940","created":1750146635198,"text":"两类虚拟化方法","expandState":"expand"},"children":[{"data":{"id":"daon96ouxi80","created":1750146778679,"text":"第一类虚拟机管理程序"},"children":[]},{"data":{"id":"daon96yzx800","created":1750146779292,"text":"第二类虚拟机管理程序"},"children":[]}]}]}]},{"data":{"id":"dao0q4qi8680","created":1750083221088,"text":"进程与线程","expandState":"expand"},"children":[{"data":{"id":"dao0u0r99a80","created":1750083525883,"text":"进程与线程","expandState":"expand"},"children":[{"data":{"id":"daompzh6k7c0","created":1750145274058,"text":"进程的概念、组成、特征","expandState":"expand"},"children":[{"data":{"id":"daomto8rj7k0","created":1750145563061,"text":"概念"},"children":[{"data":{"id":"daomu02aj4g0","created":1750145588791,"text":"进程是进程实体的运行过程，是系统进行资源分配和调度的一个独立单位"},"children":[]}]},{"data":{"id":"daomtokkfgo0","created":1750145563775,"text":"组成"},"children":[{"data":{"id":"daomujrptwo0","created":1750145631687,"text":"PCB"},"children":[{"data":{"id":"daomv0jwv4w0","created":1750145668221,"text":"进程描述信息"},"children":[{"data":{"id":"daon29557ao0","created":1750146235468,"text":"进程标识符PID"},"children":[]},{"data":{"id":"daon29mtmjk0","created":1750146236537,"text":"用户标识符UID"},"children":[]}]},{"data":{"id":"daomv13im2g0","created":1750145669406,"text":"进程控制和管理信息"},"children":[{"data":{"id":"daon2bg4aa80","created":1750146240485,"text":"CPU、磁盘、网络流量使用情况统计……"},"children":[]},{"data":{"id":"daon2brstwo0","created":1750146241191,"text":"进程当前状态：就绪态/阻塞态/运行态……"},"children":[]}]},{"data":{"id":"daomv1f2kcg0","created":1750145670105,"text":"资源分配清单"},"children":[{"data":{"id":"daon2fd0h600","created":1750146249004,"text":"正在使用哪些文件"},"children":[]},{"data":{"id":"daon2g7f8yo0","created":1750146250843,"text":"正在使用哪些内存区域"},"children":[]},{"data":{"id":"daon2gkyxog0","created":1750146251662,"text":"正在使用哪些I/O设备"},"children":[]}]},{"data":{"id":"daomv1rho480","created":1750145670856,"text":"处理机相关信息"},"children":[{"data":{"id":"daon2hs7rg00","created":1750146254277,"text":"如PSW、PC等等各种寄存器的值（用于实现进程切换）"},"children":[]}]},{"data":{"id":"daoncvb3md40","created":1750147067359,"text":"组织方式"},"children":[{"data":{"id":"daoncz9iaqo0","created":1750147075970,"text":"链接方式"},"children":[{"data":{"id":"daondbm1gcw0","created":1750147102849,"text":"按照进程状态将PCB分为多个队列"},"children":[]},{"data":{"id":"daondc25xl40","created":1750147103824,"text":"操作系统持有指向各个队列的指针"},"children":[]}]},{"data":{"id":"daoncztz4w80","created":1750147077207,"text":"索引方式"},"children":[{"data":{"id":"daondd9bd480","created":1750147106433,"text":"根据进程状态的不同，建立几张索引表"},"children":[]},{"data":{"id":"daonddk4htc0","created":1750147107087,"text":"操作系统持有指向各个索引表的指针"},"children":[]}]}]}]},{"data":{"id":"daomuk675ls0","created":1750145632563,"text":"程序段"},"children":[{"data":{"id":"daomv3auwo00","created":1750145674204,"text":"程序的代码（指令序列）"},"children":[]}]},{"data":{"id":"daomukjjvc80","created":1750145633370,"text":"数据段"},"children":[{"data":{"id":"daomv4f33s80","created":1750145676636,"text":"运行过程中产生的各种数据（如：程序中定义的变量）"},"children":[]}]}]},{"data":{"id":"daomtvzqdco0","created":1750145579929,"text":"特征"},"children":[{"data":{"id":"daomx3iif0w0","created":1750145831395,"text":"动态性"},"children":[{"data":{"id":"daomy0axbfk0","created":1750145902770,"text":"进程的最基本特性"},"children":[]},{"data":{"id":"daomy16ao280","created":1750145904667,"text":"进程是程序的一次执行过程，是动态地产生、变化和消亡的"},"children":[]}]},{"data":{"id":"daomx3t5gs80","created":1750145832038,"text":"并发性"},"children":[{"data":{"id":"daomywkhr480","created":1750145973005,"text":"内存中有多个进程实体，各进程可并发执行"},"children":[]}]},{"data":{"id":"daomx4g357s0","created":1750145833425,"text":"独立性"},"children":[{"data":{"id":"daomzh1kslc0","created":1750146017574,"text":"进程是能独立运行、独立获得资源、独立接受调度的基本单位"},"children":[]}]},{"data":{"id":"daomx4swv1k0","created":1750145834200,"text":"异步性"},"children":[{"data":{"id":"daon01d1c000","created":1750146061803,"text":"各进程按各自独立的、不可预知的速度向前推进，可能导致运行结果的不确定，操作系统要提供“进程同步机制”来解决异步问题"},"children":[]}]},{"data":{"id":"daomx5596rs0","created":1750145834947,"text":"结构性"},"children":[{"data":{"id":"daon1e55xw80","created":1750146167989,"text":"每个进程都会配置一个PCB。结构上看，进程由程序段、数据段、PCB组成"},"children":[]}]}]}]},{"data":{"id":"daomq0bk0pk0","created":1750145275895,"text":"进程的状态与转换","expandState":"expand"},"children":[{"data":{"id":"daonf3wvsrs0","created":1750147242819,"text":"状态（前三种是进程的基本状态）"},"children":[{"data":{"id":"daonhihqs0g0","created":1750147431283,"text":"运行态（Running）","background":"#d99594"},"children":[{"data":{"id":"daonjvm2rso0","created":1750147616572,"text":"占有CPU，并在CPU上运行","progress":null},"children":[]}]},{"data":{"id":"daonhj29um00","created":1750147432525,"text":"就绪态（Ready）","background":"#d99594"},"children":[{"data":{"id":"daonkcmvma80","created":1750147653626,"text":"已经具备运行条件，但由于没有空闲CPU，而暂时不能运行"},"children":[]}]},{"data":{"id":"daonhjd8d5s0","created":1750147433187,"text":"阻塞态（Waiting/Blocked，又称：等待态）","background":"#d99594"},"children":[{"data":{"id":"daonkzav5sg0","created":1750147702965,"text":"因等待某一事件而暂时不能运行"},"children":[]}]},{"data":{"id":"daonhjohoyo0","created":1750147433868,"text":"创建态（New，又称：新建态）"},"children":[{"data":{"id":"daonlkxqfq80","created":1750147750060,"text":"进程正在被创建，操作系统为进程分配资源、初始化PCB"},"children":[]}]},{"data":{"id":"daonhk04p3k0","created":1750147434572,"text":"终止态（Terminated，又称：结束态）"},"children":[{"data":{"id":"daonm53f8740","created":1750147793940,"text":"进程正在从系统中撤销，操作系统会回收进程拥有的资源、撤销PCB"},"children":[]}]}]},{"data":{"id":"daonf4am8a00","created":1750147243649,"text":"状态间的转换"},"children":[{"data":{"id":"daonnq444kw0","created":1750147918058,"text":"就绪态——>运行态","priority":null,"background":"#d99594"},"children":[{"data":{"id":"daonp7jom740","created":1750148034369,"text":"进程被调度"},"children":[]}]},{"data":{"id":"daonnqkaihs0","created":1750147919037,"text":"运行态——>就绪态","background":"#d99594"},"children":[{"data":{"id":"daonq0xyu4w0","created":1750148098360,"text":"时间片到，或CPU被其他高优先级的进程抢占"},"children":[]}]},{"data":{"id":"daonnqugag80","created":1750147919651,"text":"运行态——>阻塞态","background":"#d99594"},"children":[{"data":{"id":"daonqflaz4g0","created":1750148130246,"text":"等待系统资源分配，或等待某事件发生（主动行为）"},"children":[]}]},{"data":{"id":"daonnra5guo0","created":1750147920600,"text":"阻塞态——>就绪态","background":"#d99594"},"children":[{"data":{"id":"daonqwrbr2g0","created":1750148167615,"text":"资源分配到位，等待的事件发生（被动行为）"},"children":[]}]},{"data":{"id":"daonnroig5s0","created":1750147921469,"text":"创建态——>就绪态"},"children":[{"data":{"id":"daons914r4g0","created":1750148272694,"text":"系统完成创建进程相关的工作"},"children":[]}]},{"data":{"id":"daonns26p9s0","created":1750147922295,"text":"运行态——>终止态"},"children":[{"data":{"id":"daonsl13x5s0","created":1750148298814,"text":"进程运行结束，或运行过程中遇到不可修复的错误"},"children":[]}]}]},{"data":{"id":"daonf7027880","created":1750147249541,"text":"进程的组织方式（各个进程PCB的组织方式）"},"children":[]}]},{"data":{"id":"daomq1e1rvs0","created":1750145278222,"text":"进程控制","expandState":"expand"},"children":[{"data":{"id":"daonx5uf5ps0","created":1750148657578,"text":"基本概念"},"children":[{"data":{"id":"daonxb4t9pc0","created":1750148669091,"text":"进程控制就是要实现进程状态的转换"},"children":[]},{"data":{"id":"daonxbrh5g80","created":1750148670461,"text":"进程控制用原语实现"},"children":[{"data":{"id":"daonxyw9v5s0","created":1750148720817,"text":"原语用关/开中断来实现"},"children":[]},{"data":{"id":"daonxz7o7vk0","created":1750148721506,"text":"原语是一种特殊的程序"},"children":[]},{"data":{"id":"daonxzkwpiw0","created":1750148722307,"text":"原语的执行必须一气呵成，不可中断"},"children":[]}]}]},{"data":{"id":"daonx6cva9c0","created":1750148658694,"text":"进程控制相关的原语"},"children":[{"data":{"id":"daonz9d5vq80","created":1750148821970,"text":"进程的创建"},"children":[{"data":{"id":"daoo1a0zk9k0","created":1750148980139,"text":"创建原语"},"children":[{"data":{"id":"daoo1hhthag0","created":1750148996394,"text":"申请空白PCB"},"children":[]},{"data":{"id":"daoo1htnql40","created":1750148997110,"text":"为新进程分配所需资源"},"children":[]},{"data":{"id":"daoo1i5vkjk0","created":1750148997849,"text":"初始化PCB"},"children":[]},{"data":{"id":"daoo1igxgew0","created":1750148998517,"text":"将PCB插入就绪队列（创建态——>就绪态）"},"children":[]}]},{"data":{"id":"daoo1ab3l200","created":1750148980751,"text":"引起进程创建的事件"},"children":[{"data":{"id":"daoo2ovrwcw0","created":1750149090840,"text":"用户登录"},"children":[{"data":{"id":"daoo3etd5600","created":1750149147290,"text":"分时系统中，用户登录成功，系统会为其建立一个新的进程"},"children":[]}]},{"data":{"id":"daoo2p39sew0","created":1750149091293,"text":"作业调度"},"children":[{"data":{"id":"daoo4dfmn080","created":1750149222647,"text":"多道批处理系统中，有新的作业放入内存时，会为其建立一个新的进程"},"children":[]}]},{"data":{"id":"daoo2pezqo80","created":1750149092002,"text":"提供服务"},"children":[{"data":{"id":"daoo4zs93y80","created":1750149271300,"text":"用户向操作系统提出某些请求时，会新建一个进程处理该请求"},"children":[]}]},{"data":{"id":"daoo2pplig00","created":1750149092643,"text":"应用请求"},"children":[{"data":{"id":"daoo5p2j0o00","created":1750149326341,"text":"由用户进程主动请求创建一个子进程"},"children":[]}]}]}]},{"data":{"id":"daonz9upft40","created":1750148823031,"text":"进程的终止"},"children":[{"data":{"id":"daoo6elg10o0","created":1750149381904,"text":"撤销原语（就绪态/阻塞态/运行态——>终止态——>无）"},"children":[{"data":{"id":"daoo6ja44kw0","created":1750149392103,"text":"从PCB集合中找到终止进程的PCB"},"children":[]},{"data":{"id":"daoo6jif99s0","created":1750149392605,"text":"若进程正在运行，立即剥夺CPU，将CPU分配给其他进程"},"children":[]},{"data":{"id":"daoo6k95u880","created":1750149394222,"text":"终止其所有子进程（进程间的关系是树形结构）"},"children":[]},{"data":{"id":"daoo6kko21c0","created":1750149394918,"text":"将该进程拥有的所有资源归还给父进程或是操作系统"},"children":[]},{"data":{"id":"daoo6ky4dk00","created":1750149395731,"text":"删除PCB"},"children":[]}]},{"data":{"id":"daoo6ewr1200","created":1750149382588,"text":"引起进程终止的事件"},"children":[{"data":{"id":"daoo8ugw8k00","created":1750149573186,"text":"正常结束"},"children":[{"data":{"id":"daoo91fxa080","created":1750149588365,"text":"进程自己请求终止（exit系统调用）"},"children":[]}]},{"data":{"id":"daoo8uxrsq80","created":1750149574206,"text":"异常结束"},"children":[{"data":{"id":"daoo9qffcsg0","created":1750149642754,"text":"整数除以0、非法使用特权指令，然后被操作系统强行杀掉"},"children":[]}]},{"data":{"id":"daoo8v9ngkw0","created":1750149574925,"text":"外界干预"},"children":[{"data":{"id":"daooagt1syw0","created":1750149700174,"text":"Ctrl+Alt+delete，用户选择杀掉进程"},"children":[]}]}]}]},{"data":{"id":"daonza6q8sg0","created":1750148823758,"text":"进程的阻塞（阻塞原语和唤醒原语要成对使用）"},"children":[{"data":{"id":"daood5d90co0","created":1750149910367,"text":"阻塞原语（运行态——>阻塞态）"},"children":[{"data":{"id":"daoodumnzmo0","created":1750149965356,"text":"找到要阻塞的进程对应的PCB"},"children":[]},{"data":{"id":"daoodv7nzs00","created":1750149966625,"text":"保护进程运行现场，将PCB状态信息设置为“阻塞态”，暂时停止进程运行"},"children":[]},{"data":{"id":"daoodvkhq1s0","created":1750149967401,"text":"将PCB插入相应事件的等待队列"},"children":[]}]},{"data":{"id":"daood5m8o280","created":1750149910910,"text":"引起进程阻塞的事件"},"children":[{"data":{"id":"daoofsgwbc00","created":1750150117382,"text":"需要等待系统分配某种资源"},"children":[]},{"data":{"id":"daoofstjoiw0","created":1750150118146,"text":"需要等待相互合作的其他进程完成工作"},"children":[]}]}]},{"data":{"id":"daonzaishu80","created":1750148824487,"text":"进程的唤醒"},"children":[{"data":{"id":"daood74rblc0","created":1750149914207,"text":"唤醒原语（阻塞态——>就绪态）"},"children":[{"data":{"id":"daoohz8h4yg0","created":1750150288838,"text":"在事件等待队列中找到PCB"},"children":[]},{"data":{"id":"daoohzhdkqw0","created":1750150289376,"text":"将PCB从等待队列移除，设置进程为就绪态"},"children":[]},{"data":{"id":"daoohzrvfrc0","created":1750150290011,"text":"将PCB插入就绪队列，等待被调度"},"children":[]}]},{"data":{"id":"daood7f1yco0","created":1750149914829,"text":"引起进程唤醒的事件"},"children":[{"data":{"id":"daooh35u7yg0","created":1750150219022,"text":"等待的事件发生（因何事阻塞，就应由何事唤醒）"},"children":[]}]}]},{"data":{"id":"daonzauzpy00","created":1750148825225,"text":"进程的切换"},"children":[{"data":{"id":"daookafsov40","created":1750150469954,"text":"切换原语（运行态——>阻塞态/就绪态，就绪态——>运行态）"},"children":[{"data":{"id":"daoooq5u2wg0","created":1750150817637,"text":"将运行环境信息（进程上下文Context）存入PCB"},"children":[]},{"data":{"id":"daoooro947k0","created":1750150820927,"text":"PCB移入相应队列"},"children":[]},{"data":{"id":"daooorzgn6o0","created":1750150821605,"text":"选择另一个进程执行，并更新其PCB"},"children":[]},{"data":{"id":"daooosb93yg0","created":1750150822318,"text":"根据PCB恢复新进程所需的运行环境"},"children":[]}]},{"data":{"id":"daookb1vv880","created":1750150471289,"text":"引起进程切换的事件"},"children":[{"data":{"id":"daooqr3d54w0","created":1750150976392,"text":"当前进程时间片到"},"children":[]},{"data":{"id":"daooqrhlio00","created":1750150977253,"text":"有更高优先级的进程到达"},"children":[]},{"data":{"id":"daooqrusrko0","created":1750150978051,"text":"当前进程主动阻塞"},"children":[]},{"data":{"id":"daooqs8gd540","created":1750150978877,"text":"当前进程终止"},"children":[]}]}]}]}]},{"data":{"id":"daomq23rqaw0","created":1750145279777,"text":"进程通信","expandState":"expand"},"children":[{"data":{"id":"daowv51ohy80","created":1750173889101,"text":"共享存储"},"children":[{"data":{"id":"daowvn8grwg0","created":1750173928694,"text":"设置一个共享内存区域，并映射到进程的虚拟地址空间","layout_right_offset":{"x":-7.9999998807907104,"y":5.999999910593033}},"children":[]},{"data":{"id":"daple5ddjvk0","created":1750243085365,"text":"要互斥地访问共享空间（由通信进程自己负责实现互斥）","layout_right_offset":{"x":4.999999925494194,"y":12.999999806284904}},"children":[]},{"data":{"id":"dapldr83ykw0","created":1750243054572,"text":"两种方式"},"children":[{"data":{"id":"daowvmyq2zc0","created":1750173928105,"text":"基于数据结构的共享（低级）"},"children":[]},{"data":{"id":"daplearshsw0","created":1750243097121,"text":"基于存储区的共享（高级）"},"children":[]}]}]},{"data":{"id":"daowv5eh8zs0","created":1750173889875,"text":"消息传递","layout_right_offset":{"x":4.999999925494194,"y":20.999999687075615}},"children":[{"data":{"id":"daowvq1f57k0","created":1750173934798,"text":"传递结构化地消息（消息头/消息体）"},"children":[]},{"data":{"id":"dapm1hjnrcw0","created":1750244914243,"text":"系统提供“发送/接受原语”","layout_right_offset":{"x":-1.9999999701976776,"y":12.999999806284904}},"children":[]},{"data":{"id":"dapm1d2fxow0","created":1750244904494,"text":"两种方式"},"children":[{"data":{"id":"daowvptoiso0","created":1750173934330,"text":"直接通信方式"},"children":[{"data":{"id":"dapm1uy4cgo0","created":1750244943415,"text":"消息直接挂到接收进程地消息队列里"},"children":[]}]},{"data":{"id":"dapm1m7dat40","created":1750244924383,"text":"间接（信箱）通信方式"},"children":[{"data":{"id":"dapm1viaew80","created":1750244944635,"text":"消息先发到中间体（信箱）"},"children":[]}]}]}]},{"data":{"id":"daowv5tpba80","created":1750173890796,"text":"管道通信"},"children":[{"data":{"id":"dapm2265kl40","created":1750244959138,"text":"设置一个特殊的共享文件（管理），其实就是一个内存缓冲区"},"children":[]},{"data":{"id":"dapm22wapu80","created":1750244960719,"text":"一个管道只能实现半双工通信"},"children":[]},{"data":{"id":"dapm239l2c00","created":1750244961523,"text":"实现双向同时通信要建立两个管道"},"children":[]},{"data":{"id":"dapm23yx8iw0","created":1750244963055,"text":"各进程要互斥访问管道（由操作系统负责实现互斥）"},"children":[]},{"data":{"id":"dapm24b82ww0","created":1750244963798,"text":"管道写满时，写进程阻塞。管道读空时，读进程阻塞"},"children":[]}]}]},{"data":{"id":"daomq3hiu5s0","created":1750145282786,"text":"信号","expandState":"expand"},"children":[{"data":{"id":"dapnhmu14r40","created":1750249000690,"text":"作用"},"children":[{"data":{"id":"dapni6y3wf40","created":1750249044472,"text":"信号用于通知进程某个特定事件已经发生(实现简单的进程间通信)"},"children":[]},{"data":{"id":"dapni7b09280","created":1750249045252,"text":"“信号”常作为异常处理的一种配套机制一注:此为拓展知识"},"children":[]}]},{"data":{"id":"dapnhnd1eqw0","created":1750249001839,"text":"信号的发送——常使用kill函数(需指明接收进程的pid、信号的序号)"},"children":[{"data":{"id":"dapniadii800","created":1750249051934,"text":"可以由一个进程给另一个进程发送信号"},"children":[]},{"data":{"id":"dapniajxn3c0","created":1750249052322,"text":"可以由操作系统内核给进程发送信号"},"children":[]},{"data":{"id":"dapniauc8sg0","created":1750249052952,"text":"一个进程也可以给自己发送信号"},"children":[]}]},{"data":{"id":"dapnhns5s540","created":1750249002754,"text":"信号的保存"},"children":[{"data":{"id":"dapnic2mac00","created":1750249055629,"text":"在每个进程的PCB中，用两个N bit位向量表示待处理信号、被阻塞信号"},"children":[]}]},{"data":{"id":"dapnho66xuo0","created":1750249003602,"text":"信号的处理"},"children":[{"data":{"id":"dapnidnjwew0","created":1750249059071,"text":"处理时机"},"children":[{"data":{"id":"dapnpl77pb40","created":1750249624047,"text":"当进程从内核态转为用户态时，例行检查是否有待处理信号，如果有，就处理信号。"},"children":[]}]},{"data":{"id":"dapnidz4z140","created":1750249059772,"text":"如何处理"},"children":[{"data":{"id":"dapnif2s0fs0","created":1750249062169,"text":"①执行默认的信号处理程序"},"children":[{"data":{"id":"dapnih3q65s0","created":1750249066580,"text":"操作系统内核对每一种信号都有默认处理程序"},"children":[]},{"data":{"id":"dapnihfgy1s0","created":1750249067290,"text":"某些信号默认忽略，不必处理。如:Linux的SIGWINCH 信号"},"children":[]}]},{"data":{"id":"dapniffcf740","created":1750249062929,"text":"②执行用户定义的信号处理程序"},"children":[{"data":{"id":"dapniidwly80","created":1750249069372,"text":"允许进程通过系统调用，自定义某些信号的处理程序"},"children":[]},{"data":{"id":"dapniip2lzs0","created":1750249070047,"text":"自定义信号处理程序将覆盖操作系统的默认处理"},"children":[]}]}]}]},{"data":{"id":"dapnhoh6gpc0","created":1750249004267,"text":"特点"},"children":[{"data":{"id":"dapnin1xxnk0","created":1750249079533,"text":"不同的操作系统，对信号类型的定义各不相同"},"children":[]},{"data":{"id":"dapninag2ig0","created":1750249080047,"text":"重复收到的同类信号，将被简单地丢弃(因为仅用1bit记录一类待处理信号)"},"children":[]},{"data":{"id":"dapninl9qg80","created":1750249080701,"text":"有些信号既不能被用户自定义处理函数，也不能被阻塞。如:Linux 的 SIGKILL、SIGSTOP 信号"},"children":[]}]}]},{"data":{"id":"daomq4511gg0","created":1750145284207,"text":"线程的概念与特点","expandState":"expand"},"children":[{"data":{"id":"dapnjmn47u80","created":1750249157000,"text":"什么是线程，为什么要引入线程？"},"children":[]},{"data":{"id":"dapnjn2do4g0","created":1750249157923,"text":"引入线程机制后，有什么变化？"},"children":[{"data":{"id":"dapnlhv9ubs0","created":1750249303338,"text":"资源分配、调度"},"children":[{"data":{"id":"dapnlirumag0","created":1750249305308,"text":"传统进程机制中，进程是资源分配、调度的基本单位"},"children":[]},{"data":{"id":"dapnlj2z00g0","created":1750249305980,"text":"引入线程后，进程是资源分配的基本单位，线程是调度的基本单位"},"children":[]}]},{"data":{"id":"dapnll081wg0","created":1750249310168,"text":"并发性"},"children":[{"data":{"id":"dapnlmfugvs0","created":1750249313289,"text":"传统进程机制中，只能进程间并发"},"children":[]},{"data":{"id":"dapnlmt9f4w0","created":1750249314100,"text":"引入线程后，各线程间也能并发，提升了并发度"},"children":[]}]},{"data":{"id":"dapnlr0ebgo0","created":1750249323239,"text":"系统开销"},"children":[{"data":{"id":"dapnlscpv480","created":1750249326161,"text":"传统的进程间并发，需要切换进程的运行环境，系统开销很大"},"children":[]},{"data":{"id":"dapnlsse7600","created":1750249327108,"text":"线程间并发，如果是同一进程内的线程切换，则不需要切换进程环境，系统开销小"},"children":[]},{"data":{"id":"dapnlt6d6680","created":1750249327953,"text":"引入线程后，并发所带来的系统开销减小"},"children":[]}]}]},{"data":{"id":"dapnjnodjvk0","created":1750249159253,"text":"线程有哪些重要的属性"},"children":[{"data":{"id":"dapnmaachyo0","created":1750249365199,"text":"线程是处理机调度的单位"},"children":[]},{"data":{"id":"dapnmawcnn40","created":1750249366530,"text":"多CPU计算机中，各个线程可占用不同的CPU"},"children":[]},{"data":{"id":"dapnmbftax40","created":1750249367707,"text":"每个线程都有一个线程ID、线程控制块（TCB）"},"children":[]},{"data":{"id":"dapnmcgf52w0","created":1750249369920,"text":"线程也有就绪、阻塞、运行三种基本状态"},"children":[]},{"data":{"id":"dapnmdaxa0g0","created":1750249371765,"text":"线程几乎不拥有系统资源"},"children":[]},{"data":{"id":"dapnmdogcts0","created":1750249372583,"text":"同一进程的不同线程间共享进程的资源"},"children":[]},{"data":{"id":"dapnme21wa00","created":1750249373405,"text":"由于共享内存地址空间，同一进程中的线程间通信甚至无需系统干预"},"children":[]},{"data":{"id":"dapnmeg3gs80","created":1750249374254,"text":"同一进程中的线程切换，不会引起进程切换"},"children":[]},{"data":{"id":"dapnmetf7q80","created":1750249375060,"text":"不同进程中线程切换，会引起进程切换"},"children":[]},{"data":{"id":"dapnmf61se80","created":1750249375823,"text":"切换同进程内的线程，系统开销很小"},"children":[]},{"data":{"id":"dapnmfhr5600","created":1750249376531,"text":"切换进程，系统开销较大"},"children":[]}]},{"data":{"id":"dapnjos4vsg0","created":1750249161657,"text":"线程的实现方式","expandState":"expand"},"children":[{"data":{"id":"dapnjttq6200","created":1750249172637,"text":"用户级线程"},"children":[{"data":{"id":"dapo45qtzqg0","created":1750250765867,"text":"从用户视角能看到的线程，由线程库实现"},"children":[]}]},{"data":{"id":"dapnju99wow0","created":1750249173578,"text":"内核级线程"},"children":[{"data":{"id":"dapo4r6auko0","created":1750250812515,"text":"从操作系统视角看到的线程，由操作系统实现内核级线程才是处理机分配的单位"},"children":[]}]},{"data":{"id":"dapo38zzsgg0","created":1750250694587,"text":"组合方式"},"children":[{"data":{"id":"dapo5h2fmlk0","created":1750250868877,"text":"上述两种方式的结合"},"children":[]}]}]},{"data":{"id":"dapnjp7f7l40","created":1750249162582,"text":"多线程模型"},"children":[{"data":{"id":"dapnjs110ow0","created":1750249168725,"text":"一对一模型"},"children":[{"data":{"id":"dapo5rbii8w0","created":1750250891194,"text":"一个用户级线程映射到一个内核级线程"},"children":[]},{"data":{"id":"dapo5rkbbbc0","created":1750250891726,"text":"优点：各个线程可分配到多核处理机并行执行，并发度高"},"children":[]},{"data":{"id":"dapo5rvsrl40","created":1750250892421,"text":"缺点：线程管理都需要操作系统支持，开销大"},"children":[]}]},{"data":{"id":"dapnjrlftlk0","created":1750249167783,"text":"多对一模型"},"children":[{"data":{"id":"dapo5ta4seo0","created":1750250895464,"text":"多个用户级线程映射到一个内核级线程"},"children":[]},{"data":{"id":"dapo5ti2mu00","created":1750250895944,"text":"优点：线程管理开销小效率高"},"children":[]},{"data":{"id":"dapo5ttt2g00","created":1750250896654,"text":"缺点：一个线程阻塞会导致整个进程都被阻塞（并发度低）"},"children":[]}]},{"data":{"id":"dapnjsc3vy00","created":1750249169395,"text":"多对多模型"},"children":[{"data":{"id":"dapo5uyhkps0","created":1750250899114,"text":"n个用户级线程映射到m个内核级线程（n>=m）"},"children":[]},{"data":{"id":"dapo5v9xp400","created":1750250899806,"text":"集二者之所长"},"children":[]}]}]}]},{"data":{"id":"daomq56q6bk0","created":1750145286487,"text":"线程的状态和转换","expandState":"expand"},"children":[{"data":{"id":"dapobux8tsg0","created":1750251369224,"text":"状态与转换"},"children":[]},{"data":{"id":"dapobv519sw0","created":1750251369695,"text":"组织与控制"},"children":[]}]}]},{"data":{"id":"dao0u2m25tc0","created":1750083529922,"text":"CPU调度","expandState":"expand"},"children":[{"data":{"id":"das1ynw9yhs0","created":1750492950645,"text":"处理机调度","expandState":"expand"},"children":[{"data":{"id":"das276acz1c0","created":1750493617592,"text":"基本概念"},"children":[{"data":{"id":"das27ete8qg0","created":1750493636158,"text":"按某种算法选择一个进程将处理机分配给它"},"children":[]}]},{"data":{"id":"das276hxtco0","created":1750493618051,"text":"三个层次"},"children":[{"data":{"id":"das289i0fq00","created":1750493702950,"text":"高级调度（作业调度）"},"children":[{"data":{"id":"das28ynjk4w0","created":1750493757704,"text":"按照某种规则，从后备队列中选择合适的作业将其调入内存，并为其创建进程"},"children":[]}]},{"data":{"id":"das289pjrzs0","created":1750493703405,"text":"中级调度（内存调度）"},"children":[{"data":{"id":"das2a58svh40","created":1750493850414,"text":"按照某种规则，从挂起队列中选择合适的进程将其数据调回内存"},"children":[]}]},{"data":{"id":"das28a1mn140","created":1750493704136,"text":"低级调度（进程调度）"},"children":[{"data":{"id":"das2b14mmc00","created":1750493919819,"text":"按照某种规则，从就绪队列中选择一个进程为其分配处理机"},"children":[]}]}]},{"data":{"id":"das276tm28g0","created":1750493618757,"text":"三层调度的联系、对比"},"children":[{"data":{"id":"das2djcxfzs0","created":1750494116231,"text":"高级调度"},"children":[{"data":{"id":"das2duxa4j40","created":1750494141406,"text":"外存——>内存（面向作业）"},"children":[]},{"data":{"id":"das2dvdgjgo0","created":1750494142384,"text":"发生频率：最低"},"children":[]}]},{"data":{"id":"das2djo02w00","created":1750494116900,"text":"中级调度"},"children":[{"data":{"id":"das2dwmxn3c0","created":1750494145134,"text":"外存——>内存（面向进程）"},"children":[]},{"data":{"id":"das2dx55bgo0","created":1750494146235,"text":"发生频率：中等"},"children":[]}]},{"data":{"id":"das2djzh38w0","created":1750494117594,"text":"低级调度"},"children":[{"data":{"id":"das2dxz2wu00","created":1750494148045,"text":"内存——>CPU"},"children":[]},{"data":{"id":"das2dy7xixk0","created":1750494148580,"text":"发生频率：最高"},"children":[]}]}]},{"data":{"id":"das277bhewo0","created":1750493619837,"text":"补充知识"},"children":[{"data":{"id":"das2fdvku3c0","created":1750494261026,"text":"为减轻系统负载，提高资源利用率，暂时不执行的进程会被调到外存从而变为“挂起态”"},"children":[]},{"data":{"id":"das2fe2l10w0","created":1750494261450,"text":"七状态模型：在五状态模型的基础上加入了“就绪挂起”和“阻塞挂起”两种状态"},"children":[]}]}]},{"data":{"id":"das1yoe6xso0","created":1750492951729,"text":"进程调度的时机，切换与过程，调度方式","expandState":"expand"},"children":[{"data":{"id":"das2hshtaww0","created":1750494449574,"text":"时机"},"children":[{"data":{"id":"das2hxfsjc80","created":1750494460336,"text":"什么时候需要进程调度？"},"children":[{"data":{"id":"das2i9o4kf40","created":1750494486961,"text":"主动放弃"},"children":[{"data":{"id":"das2ifajmjs0","created":1750494499200,"text":"进程正常终止"},"children":[]},{"data":{"id":"das2ig08wuo0","created":1750494500755,"text":"运行过程中发生异常而终止"},"children":[]},{"data":{"id":"das2igcmpn40","created":1750494501503,"text":"主动阻塞（如 等待I/O）"},"children":[]}]},{"data":{"id":"das2i9y1frs0","created":1750494487560,"text":"被动放弃"},"children":[{"data":{"id":"das2jczt0480","created":1750494572562,"text":"分给进程的时间片用完"},"children":[]},{"data":{"id":"das2jd7b97s0","created":1750494573016,"text":"有更紧急的事情需要处理（如 I/O中断）"},"children":[]},{"data":{"id":"das2jdj4p8g0","created":1750494573730,"text":"有更高优先级的进程进入就绪队列"},"children":[]}]}]},{"data":{"id":"das2hxqyurc0","created":1750494461011,"text":"什么时候不能进行进程调度？"},"children":[{"data":{"id":"das2kvyyykw0","created":1750494692234,"text":"在处理中断的过程中"},"children":[]},{"data":{"id":"das2kw7qifk0","created":1750494692764,"text":"进程在操作系统内核程序临界区中"},"children":[]},{"data":{"id":"das2kwipkrs0","created":1750494693428,"text":"原子操作过程中（原语）"},"children":[]}]}]},{"data":{"id":"das2hsr4odc0","created":1750494450137,"text":"切换与过程"},"children":[{"data":{"id":"das2ltts5e80","created":1750494765931,"text":"狭义的“调度”和“切换”的区别"},"children":[]},{"data":{"id":"das2lu2cnkw0","created":1750494766449,"text":"切换过程"},"children":[{"data":{"id":"das2may8hko0","created":1750494803206,"text":"对原来运行进程各种数据的保存"},"children":[]},{"data":{"id":"das2mb63cvs0","created":1750494803681,"text":"对新的进程各种数据的恢复"},"children":[]}]},{"data":{"id":"das2lud59bs0","created":1750494767102,"text":"重要结论：进程调度、切换是有代价的，并不是调度越频繁，并发度就越高"},"children":[]}]},{"data":{"id":"das2ht7ysu00","created":1750494451155,"text":"方式"},"children":[{"data":{"id":"das2nuzb1qw0","created":1750494925170,"text":"非剥夺调度方式（非抢占式）"},"children":[{"data":{"id":"das2nwak1bc0","created":1750494928028,"text":"只能由当前运行的进程主动放弃CPU"},"children":[]}]},{"data":{"id":"das2nv6juko0","created":1750494925608,"text":"剥夺调度方式（抢占式）"},"children":[{"data":{"id":"das2nxajk400","created":1750494930203,"text":"可由操作系统剥夺当前进程的CPU使用权"},"children":[]}]}]}]},{"data":{"id":"das1ysmaf200","created":1750492960925,"text":"调度算法的评价指标","expandState":"expand"},"children":[{"data":{"id":"das2pf81eqg0","created":1750495047598,"text":"CPU利用率"},"children":[{"data":{"id":"das2qbajtvs0","created":1750495117407,"text":"也有题目会让我们计算某设备的利用率"},"children":[]},{"data":{"id":"das2qbig8340","created":1750495117885,"text":"利用率=忙碌的时间/总时间"},"children":[]}]},{"data":{"id":"das2pfg79mg0","created":1750495048092,"text":"系统吞吐量"},"children":[{"data":{"id":"das2u2jcdsw0","created":1750495411804,"text":"系统吞吐量=总共完成了多少道作业/总共花了多少时间"},"children":[]}]},{"data":{"id":"das2pfygdiw0","created":1750495049195,"text":"周转时间"},"children":[{"data":{"id":"das2uoxq5ps0","created":1750495460563,"text":"周转时间=作业完成时间-作业提交时间"},"children":[]},{"data":{"id":"das2upnla340","created":1750495462127,"text":"平均周转时间=各作业周转时间之和/作业数"},"children":[]},{"data":{"id":"das2upxzlko0","created":1750495462756,"text":"带权周转时间=作业周转时间/作业实际运行的时间"},"children":[]},{"data":{"id":"das2uqb67p40","created":1750495463553,"text":"平均带权周转时间=各作业带权周转时间之和/作业数"},"children":[]}]},{"data":{"id":"das2pg9uzu80","created":1750495049885,"text":"等待时间"},"children":[{"data":{"id":"das2zh3jfbk0","created":1750495835321,"text":"进程/作业  等待被服务的时间之和"},"children":[]},{"data":{"id":"das2ziw9k8o0","created":1750495839235,"text":"平均等待时间即各个 进程/作业 等待时间的平均值"},"children":[]}]},{"data":{"id":"das2pglbtew0","created":1750495050578,"text":"响应时间"},"children":[{"data":{"id":"das30b2nllk0","created":1750495900571,"text":"从用户提交请求到首次产生响应所用的时间"},"children":[]}]}]},{"data":{"id":"das1yvin55c0","created":1750492967235,"text":"调度算法","expandState":"expand"},"children":[{"data":{"id":"das20x6ykps0","created":1750493127611,"text":"先来先服务（FCFS）"},"children":[]},{"data":{"id":"das20xgwduw0","created":1750493128212,"text":"短作业优先（SJF）"},"children":[]},{"data":{"id":"das20xq7qs80","created":1750493128775,"text":"高响应比优先（HRRN）"},"children":[]},{"data":{"id":"das20y09h8g0","created":1750493129383,"text":"时间片轮转调度算法（RR）"},"children":[]},{"data":{"id":"das20ydg0gw0","created":1750493130180,"text":"优先级调度算法"},"children":[]},{"data":{"id":"das20ytf2000","created":1750493131146,"text":"多级反馈队列调度算法"},"children":[]},{"data":{"id":"das20zw7uqg0","created":1750493133492,"text":"多级队列调度算法"},"children":[]}]},{"data":{"id":"das1z1qad340","created":1750492980758,"text":"多处理机调度","expandState":"expand"},"children":[{"data":{"id":"das30tzk61s0","created":1750495941743,"text":"需考虑两个目标"},"children":[{"data":{"id":"das311mqlds0","created":1750495958382,"text":"负载均衡"},"children":[{"data":{"id":"das317auasg0","created":1750495970723,"text":"尽可能让每个CPU都同等忙碌"},"children":[]}]},{"data":{"id":"das311vufdk0","created":1750495958933,"text":"处理机亲和性"},"children":[{"data":{"id":"das31wugu9s0","created":1750496026330,"text":"尽量让一个进程调度到同一个CPU上运行，以发挥CPU中缓存的作用（Cache）"},"children":[]}]}]},{"data":{"id":"das30u72zgo0","created":1750495942198,"text":"方案一：公共就绪队列"},"children":[{"data":{"id":"das33f9hmlc0","created":1750496144784,"text":"所有CPU共享同一个就绪进程队列。每个CPU时运行调度程序，从公共就绪队列中选择一个进程运行（每个CPU访问公共就绪队列时需要上锁，确保互斥）"},"children":[]},{"data":{"id":"das33fi3eo80","created":1750496145304,"text":"优点：可以天然地实现负载均衡"},"children":[]},{"data":{"id":"das33fs16uw0","created":1750496145905,"text":"缺点：各个进程可能会频繁地换CPU运行，“亲和性”不好"},"children":[]},{"data":{"id":"das33g24bqo0","created":1750496146515,"text":"如何提升处理机亲和性？"},"children":[{"data":{"id":"das369ase4o0","created":1750496366894,"text":"软亲和"},"children":[{"data":{"id":"das36fbxx200","created":1750496380025,"text":"由进程调度程序尽量保证“亲和性”"},"children":[]}]},{"data":{"id":"das369irk680","created":1750496367377,"text":"硬亲和"},"children":[{"data":{"id":"das36y2csjs0","created":1750496420804,"text":"由用户进程通过系统调用，主动要求操作系统分配固定的CPU，确保“亲和性”"},"children":[]}]}]}]},{"data":{"id":"das30uhoy5c0","created":1750495942839,"text":"方案二：私有就绪队列"},"children":[{"data":{"id":"das37ri74tc0","created":1750496484889,"text":"每个CPU有一个私有的就绪进程队列。每个CPU时运行调度程序，从私有就绪队列中选择一个进程运行"},"children":[]},{"data":{"id":"das37rs2f000","created":1750496485485,"text":"优点：天然地实现了“处理机亲和性”"},"children":[]},{"data":{"id":"das37s6ja3s0","created":1750496486360,"text":"如何实现负载均衡？"},"children":[{"data":{"id":"das39pr5uz40","created":1750496637806,"text":"推迁移（push）"},"children":[{"data":{"id":"das3eij17z40","created":1750497013897,"text":"一个特定的系统程序周期性检查每个处理器的负载，如果负载不平衡，就从忙碌CPU的就绪队列中“推”一些就绪进程到空闲CPU的就绪队列"},"children":[]}]},{"data":{"id":"das39pxr99s0","created":1750496638204,"text":"拉迁移（pull）"},"children":[{"data":{"id":"das3fr6bsoo0","created":1750497111084,"text":"如果一个CPU负载很低，就从其他高负载CPU的就绪队列中“拉”一些就绪进程到自己的就绪队列"},"children":[]}]}]}]}]}]},{"data":{"id":"dao0u3d42i80","created":1750083531558,"text":"同步与互斥","expandState":"expand"},"children":[{"data":{"id":"daswid9zf8g0","created":1750579128110,"text":"同步与互斥的基本概念","expandState":"expand"},"children":[{"data":{"id":"daswo3221qo0","created":1750579576048,"text":"进程同步"},"children":[{"data":{"id":"daswo75akkg0","created":1750579584951,"text":"并发性带来了异步性，有时需要通过进程同步解决这种异步问题。有的进程之间需要相互配合地完成工作，各进程的工作推进需要遵循一定的先后顺序。"},"children":[]}]},{"data":{"id":"daswpvlprs80","created":1750579716551,"text":"进程互斥"},"children":[{"data":{"id":"daswpznc7cw0","created":1750579725356,"text":"对临界资源的访问，需要互斥的进行。即同一时间段内只能允许一个进程访问该资源"},"children":[]},{"data":{"id":"daswqo60u4g0","created":1750579778729,"text":"四个部分"},"children":[{"data":{"id":"daswqr89qgo0","created":1750579785395,"text":"进入区"},"children":[{"data":{"id":"daswqvhpkps0","created":1750579794673,"text":"检查是否可进入临界区，若可进入，需要“上锁”"},"children":[]}]},{"data":{"id":"daswr9uep1c0","created":1750579825915,"text":"临界区"},"children":[{"data":{"id":"daswrdyrebk0","created":1750579834886,"text":"访问临界资源的那段代码"},"children":[]}]},{"data":{"id":"daswrmlg78g0","created":1750579853672,"text":"退出区"},"children":[{"data":{"id":"daswrr9ktls0","created":1750579863838,"text":"负责“解锁”"},"children":[]}]},{"data":{"id":"daswrwx0sps0","created":1750579876140,"text":"剩余区"},"children":[{"data":{"id":"dasws0neet40","created":1750579884265,"text":"其余代码部分"},"children":[]}]}]},{"data":{"id":"dasws90eioo0","created":1750579902465,"text":"需要遵循的原则"},"children":[{"data":{"id":"daswsdrz0xk0","created":1750579912840,"text":"空闲让进"},"children":[{"data":{"id":"daswsvyw9o00","created":1750579952440,"text":"临界区空闲时，应允许一个进程访问"},"children":[]}]},{"data":{"id":"daswsh36q140","created":1750579920048,"text":"忙则等待"},"children":[{"data":{"id":"daswtbuvadc0","created":1750579987025,"text":"临界区正在被访问时，其他试图访问的进程需要等待"},"children":[]}]},{"data":{"id":"daswslo4u200","created":1750579930022,"text":"有限等待"},"children":[{"data":{"id":"daswtu8p2000","created":1750580027043,"text":"要在有限时间内进入临界区，保证不会饥饿"},"children":[]}]},{"data":{"id":"daswsp7q6xs0","created":1750579937737,"text":"让权等待"},"children":[{"data":{"id":"daswvgky0xk0","created":1750580154037,"text":"进不了临界区的进程，要释放处理机，防止忙等"},"children":[]}]}]}]}]},{"data":{"id":"daswilszyog0","created":1750579146674,"text":"进程互斥的软件实现方法","expandState":"expand"},"children":[{"data":{"id":"dasww4uklnk0","created":1750580206862,"text":"单标志法"},"children":[{"data":{"id":"dat0k9gvr940","created":1750590560988,"text":"在进入区只做“检查”，不“上锁”"},"children":[]},{"data":{"id":"dat0klaspk00","created":1750590586742,"text":"在退出区把临界区的使用权转交给另一个进程（相当于在退出区既给另一进程“解锁”，又给自己“上锁”）"},"children":[]},{"data":{"id":"dat0m3us1u80","created":1750590705496,"text":"主要问题：不遵循“空闲让进”原则"},"children":[]}]},{"data":{"id":"daswwalo21s0","created":1750580219385,"text":"双标志先检查"},"children":[{"data":{"id":"dat0zvovzr40","created":1750591784824,"text":"在进入区先“检查”后“上锁”，退出区“解锁”"},"children":[]},{"data":{"id":"dat1eem9ok80","created":1750592923123,"text":"主要问题：不遵循“忙则等待”原则"},"children":[]}]},{"data":{"id":"daswwfdegtk0","created":1750580229769,"text":"双标志后检查"},"children":[{"data":{"id":"dat1ep8a2o80","created":1750592946221,"text":"在进入区先“加锁”后“检查”，退出区“解锁”"},"children":[]},{"data":{"id":"dat1fd52g9s0","created":1750592998270,"text":"主要问题：不遵循“空闲让进、有限等待”原则，可能导致“饥饿”"},"children":[]}]},{"data":{"id":"daswwjcx2sw0","created":1750580238447,"text":"Peterson算法"},"children":[{"data":{"id":"dat1g5evv140","created":1750593059813,"text":"在进入区“主动争取——主动谦让——检查对方是否想进、己方是否谦让”"},"children":[]},{"data":{"id":"dat1gsokcd40","created":1750593110465,"text":"主要问题：不遵循“让权等待”原则，会发生“忙等”"},"children":[]}]}]},{"data":{"id":"daswjd464t40","created":1750579206123,"text":"进程互斥的硬件实现方法","expandState":"expand"},"children":[{"data":{"id":"davmbsletns0","created":1750855081675,"text":"中断屏蔽方法"},"children":[{"data":{"id":"davmcxhyzxk0","created":1750855170715,"text":"使用“开/关中断”指令实现"},"children":[]},{"data":{"id":"davmd5sze1k0","created":1750855188795,"text":"优点：简单高效"},"children":[]},{"data":{"id":"davmddsezk80","created":1750855206175,"text":"缺点：只适用于单处理机；只适用于操作系统内核进程"},"children":[]}]},{"data":{"id":"davmbxf45l40","created":1750855092178,"text":"TestAndSet（TS指令/TSL指令）"},"children":[{"data":{"id":"davme9hska80","created":1750855275190,"text":"old记录是否已被上锁；再将lock设为true；检查临界区是否已被上锁（若已上锁，则循环重复前几步）"},"children":[]},{"data":{"id":"davmfpy1r8o0","created":1750855389365,"text":"优点：实现简单；适用于多处理机环境；"},"children":[]},{"data":{"id":"davmg16id340","created":1750855413821,"text":"缺点：不满足“让权等待”"},"children":[]}]},{"data":{"id":"davmcctk39c0","created":1750855125703,"text":"Swap指令（XCHG指令）"},"children":[{"data":{"id":"davmgax9jeg0","created":1750855435030,"text":"逻辑上同TSL"},"children":[]}]}]},{"data":{"id":"daswji432so0","created":1750579217002,"text":"互斥锁"},"children":[]},{"data":{"id":"daswjp98odc0","created":1750579232551,"text":"信息量机制","expandState":"expand"},"children":[{"data":{"id":"davmh09rlqo0","created":1750855490206,"text":"整型信号量"},"children":[{"data":{"id":"davmhdq8g2g0","created":1750855519500,"text":"用一个整数型变量作为信号量，数值表示某种资源数"},"children":[]},{"data":{"id":"davmi4aggmg0","created":1750855577319,"text":"整型信号量与普通整型变量的区别：对信号量只能执行  初始化、P、V  三种操作"},"children":[]},{"data":{"id":"davmj0ozwog0","created":1750855647855,"text":"整型信号量存在的问题：不满足让权等待原则"},"children":[]}]},{"data":{"id":"davmjhhvu5k0","created":1750855684430,"text":"记录型信号量"},"children":[{"data":{"id":"davmjppig400","created":1750855702306,"text":"S.value表示某种资源数，S.L指向等待该资源的队列"},"children":[]},{"data":{"id":"davmk62i9k80","created":1750855737920,"text":"P 操作中，一定是先 S.value--，之后可能需要执行 block 原语"},"children":[]},{"data":{"id":"davml7f0qwo0","created":1750855819217,"text":"V 操作中，一定是先 S.value++，之后可能需要执行 wakeup 原语"},"children":[]},{"data":{"id":"davmlzrbh740","created":1750855880911,"text":"注意：要能够自己推断在什么条件下需要执行 block或 wakeup"},"children":[]},{"data":{"id":"davmmk4w2co0","created":1750855925267,"text":"可以用记录型信号量实现系统资源的“申请”和“释放”"},"children":[]},{"data":{"id":"davmnft6brc0","created":1750855994216,"text":"可以用记录型信号量实现进程互斥、进程同步"},"children":[]}]},{"data":{"id":"davmovoxhio0","created":1750856107152,"text":"实现进程互斥"},"children":[{"data":{"id":"davmq3dhxao0","created":1750856202239,"text":"分析问题，确定临界区"},"children":[]},{"data":{"id":"davmq94riw80","created":1750856214772,"text":"设置互斥信号量，初值为1"},"children":[]},{"data":{"id":"davmqi4gy280","created":1750856234345,"text":"临界区之前对信号量执行 P 操作"},"children":[]},{"data":{"id":"davmqxcw9wg0","created":1750856267506,"text":"临界区之后对信号量执行 V 操作"},"children":[]}]},{"data":{"id":"davmozyti8w0","created":1750856116457,"text":"实现进程同步"},"children":[{"data":{"id":"davmr5wey400","created":1750856286101,"text":"分析问题，找出哪里需要实现“一前一后”的同步关系"},"children":[]},{"data":{"id":"davmrj5g8gw0","created":1750856314945,"text":"设置同步信号量，初始值为0"},"children":[]},{"data":{"id":"davms0onwm00","created":1750856353112,"text":"在“前操作”之后执行 V 操作"},"children":[]},{"data":{"id":"davmsbqgq340","created":1750856377166,"text":"在“后操作“之前执行 P 操作"},"children":[]}]},{"data":{"id":"davmp3afpyo0","created":1750856123690,"text":"实现进程的前驱关系"},"children":[{"data":{"id":"davmtym0zns0","created":1750856505328,"text":"分析问题，画出前驱图，把每一对前驱关系都看成一个同步问题"},"children":[]},{"data":{"id":"davmuorsweg0","created":1750856562273,"text":"为每一对前驱关系设置同步信号量，初值为0"},"children":[]},{"data":{"id":"davmv4t1jkw0","created":1750856597177,"text":"在每个”前操作“之后执行 V 操作"},"children":[]},{"data":{"id":"davmvfttskg0","created":1750856621169,"text":"在每个”后操作“之前执行 P 操作"},"children":[]}]}]},{"data":{"id":"daswkwnvc8w0","created":1750579327037,"text":"生产者-消费者问题"},"children":[]},{"data":{"id":"daswl3ljm880","created":1750579342134,"text":"多生产者-多消费者"},"children":[]},{"data":{"id":"daswlalbfc00","created":1750579357358,"text":"读者-写者问题"},"children":[]},{"data":{"id":"daswlmuszn40","created":1750579384053,"text":"哲学家进餐问题"},"children":[]},{"data":{"id":"daswlsmz5480","created":1750579396640,"text":"管程","expandState":"expand"},"children":[{"data":{"id":"davmyyn9vk80","created":1750856897224,"text":"为什么要引入管程"},"children":[{"data":{"id":"davmz67ody80","created":1750856913695,"text":"解决信号量机制编程麻烦、易出错的问题"},"children":[]}]},{"data":{"id":"davmzk2a4i80","created":1750856943844,"text":"组成"},"children":[{"data":{"id":"davmztpqods0","created":1750856964853,"text":"共享数据结构"},"children":[]},{"data":{"id":"davmzzc3how0","created":1750856977089,"text":"对数据结构初始化的语句"},"children":[]},{"data":{"id":"davn06daug00","created":1750856992399,"text":"一组用来访问数据结构的过程（函数）"},"children":[]}]},{"data":{"id":"davn0md3xt40","created":1750857027216,"text":"基本特征"},"children":[{"data":{"id":"davn0zndh740","created":1750857056135,"text":"各外部进程/线程只能通过管程提供的特定”入口“才能访问共享数据"},"children":[]},{"data":{"id":"davn1y7uhsg0","created":1750857131383,"text":"每次仅允许一个进程在管程内执行某个内部过程"},"children":[]}]},{"data":{"id":"davnnzrpse00","created":1750858858773,"text":"补充"},"children":[{"data":{"id":"davno518fa80","created":1750858870233,"text":"各进程必须互斥访问管程的特性是由编译器实现的"},"children":[]},{"data":{"id":"davnoooleiw0","created":1750858913004,"text":"可在管程中设置条件变量及等待/唤醒操作以解决同步问题"},"children":[]}]}]}]},{"data":{"id":"dao0u4gzqfs0","created":1750083533969,"text":"死锁","expandState":"expand"},"children":[{"data":{"id":"daswniwcrr40","created":1750579532168,"text":"死锁的概念","expandState":"expand"},"children":[{"data":{"id":"davnpqihrvk0","created":1750858995353,"text":"什么是死锁"},"children":[{"data":{"id":"davnpu5hpwo0","created":1750859003274,"text":"各进程互相等待对方手里的资源，导致各进程都阻塞，无法向前推进"},"children":[]}]},{"data":{"id":"davnqd7kuug0","created":1750859044759,"text":"死锁、饥饿、死循环的区别"},"children":[{"data":{"id":"davnqulfk9s0","created":1750859082602,"text":"死锁：至少是两个进程一起死锁，死锁进程处于阻塞态"},"children":[]},{"data":{"id":"davnrc5v5so0","created":1750859120843,"text":"饥饿：可以只有一个进程饥饿，饥饿进程可能阻塞也可能就绪"},"children":[]},{"data":{"id":"davoknp1f600","created":1750861418507,"text":"死循环：可能只有一个进程发生死循环，死循环的进程可上处理机"},"children":[]},{"data":{"id":"davoldcpbds0","created":1750861474358,"text":"死锁和饥饿是操作系统要解决的问题，死循环是应用程序员要解决的"},"children":[]}]},{"data":{"id":"davoq4c7xm80","created":1750861846558,"text":"死锁产生的必要条件"},"children":[{"data":{"id":"davoqdb760w0","created":1750861866088,"text":"互斥条件"},"children":[{"data":{"id":"davoqoh6jq80","created":1750861890394,"text":"对必须互斥使用的资源的争抢才会导致死锁"},"children":[]}]},{"data":{"id":"davorjip25k0","created":1750861957966,"text":"不剥夺条件"},"children":[{"data":{"id":"davorozjp880","created":1750861969869,"text":"进程保持的资源只能主动释放，不可强行剥夺"},"children":[]}]},{"data":{"id":"davosa2hnkw0","created":1750862015759,"text":"请求和保持条件"},"children":[{"data":{"id":"davoshnwzs00","created":1750862032292,"text":"保持着某些资源不放的同时，请求别的资源"},"children":[]}]},{"data":{"id":"davot3vgj540","created":1750862080637,"text":"循环等待条件"},"children":[{"data":{"id":"davot92d4y00","created":1750862091939,"text":"存在一种进程资源的循环等待链"},"children":[]},{"data":{"id":"davotnbbzpk0","created":1750862122956,"text":"循环等待未必死锁，死锁一定有循环等待"},"children":[]}]}]},{"data":{"id":"davou4v0d6g0","created":1750862161151,"text":"什么时候会发生死锁"},"children":[{"data":{"id":"davp0gn18u00","created":1750862656975,"text":"对不可剥夺资源的不合理分配，可能导致死锁"},"children":[]}]},{"data":{"id":"davp0wjlj6w0","created":1750862691596,"text":"死锁的处理策略"},"children":[{"data":{"id":"davp14sryjc0","created":1750862709565,"text":"预防死锁"},"children":[{"data":{"id":"davp1924wps0","created":1750862718838,"text":"破坏死锁产生的四个必要条件"},"children":[]}]},{"data":{"id":"davp1jxmuw80","created":1750862742511,"text":"避免死锁"},"children":[{"data":{"id":"davp1n0r4iw0","created":1750862749230,"text":"避免系统进入不安全状态（银行家算法）"},"children":[]}]},{"data":{"id":"davp22l2krc0","created":1750862783110,"text":"死锁的检测和解除"},"children":[{"data":{"id":"davp2bkbss80","created":1750862802656,"text":"允许死锁发生，系统负责检测出死锁并解除"},"children":[]}]}]}]},{"data":{"id":"daswnnb2ork0","created":1750579541765,"text":"死锁的处理","expandState":"expand"},"children":[{"data":{"id":"davp4dnvitc0","created":1750862963953,"text":"不允许死锁发生"},"children":[{"data":{"id":"davp4nqt1lk0","created":1750862985898,"text":"静态策略：预防死锁"},"children":[{"data":{"id":"davp5dzfiow0","created":1750863043015,"text":"破坏互斥条件"},"children":[{"data":{"id":"davp64oen480","created":1750863101122,"text":"将临界资源改造为可共享使用的资源（如SPOOLing技术）"},"children":[]},{"data":{"id":"davpbweuswo0","created":1750863553315,"text":"缺点：可行性不高，很多时候无法破坏互斥条件"},"children":[]}]},{"data":{"id":"davp5jpb9gg0","created":1750863055464,"text":"破坏不剥夺条件"},"children":[{"data":{"id":"davpchpe7680","created":1750863599665,"text":"方案一，申请的资源得不到满足时，立即释放拥有的所有资源"},"children":[]},{"data":{"id":"davpd3unbc00","created":1750863647872,"text":"方案二，申请的资源被其他进程占用时，由操作系统协助剥夺（考虑优先级）"},"children":[]},{"data":{"id":"davpxps21aw0","created":1750865262887,"text":"缺点：实现复杂；剥夺资源可能导致部分工作失效；反复申请和释放导致系统开销大；可能导致饥饿"},"children":[]}]},{"data":{"id":"davp5p3zsnc0","created":1750863067236,"text":"破坏请求和保持条件"},"children":[{"data":{"id":"davpyomvtao0","created":1750865338762,"text":"运行前分配好所有需要的资源，之后一直保持"},"children":[]},{"data":{"id":"davpz5qwlgg0","created":1750865376011,"text":"缺点：资源利用率低；可能导致饥饿"},"children":[]}]},{"data":{"id":"davp5x8p01s0","created":1750863084934,"text":"破坏循环等待条件"},"children":[{"data":{"id":"davpzhwkw1k0","created":1750865402475,"text":"给资源编号，必须按编号从小到大的顺序申请资源"},"children":[]},{"data":{"id":"davpzufq9uo0","created":1750865429754,"text":"缺点：不方便增加新设备；会导致资源浪费；用户编程麻烦"},"children":[]}]}]},{"data":{"id":"davp50vn32w0","created":1750863014488,"text":"动态策略：避免死锁"},"children":[{"data":{"id":"davq0ste9og0","created":1750865504591,"text":"什么是安全序列"},"children":[]},{"data":{"id":"davq0xlyojs0","created":1750865515026,"text":"什么是系统的不安全状态，与死锁有何联系"},"children":[]},{"data":{"id":"davq1ef1g680","created":1750865551612,"text":"如何避免系统进入不安全状态——银行家算法"},"children":[]}]}]},{"data":{"id":"davp4iiz55k0","created":1750862974540,"text":"允许死锁发生"},"children":[{"data":{"id":"davq1w0rkh40","created":1750865589931,"text":"死锁的检测和解除"},"children":[{"data":{"id":"davq2n5q2qg0","created":1750865649004,"text":"死锁的检测"},"children":[{"data":{"id":"davq2zoixvk0","created":1750865676263,"text":"数据结构：资源分配图"},"children":[{"data":{"id":"davq41mxhr40","created":1750865758884,"text":"两种结点"},"children":[{"data":{"id":"davq48umwwg0","created":1750865774587,"text":"进程结点：对应一个进程"},"children":[]},{"data":{"id":"davq4fynamw0","created":1750865790067,"text":"资源结点：对应一类资源，一类资源可能有多个"},"children":[]}]},{"data":{"id":"davq455wuig0","created":1750865766562,"text":"两种边"},"children":[{"data":{"id":"davq63fad400","created":1750865919504,"text":"进程结点——>资源结点：表示进程想申请几个资源（每条边代表一个）"},"children":[]},{"data":{"id":"davq8reeqd40","created":1750866128422,"text":"资源结点——>进程结点：表示已经为进程分配了几个资源（每条边代表一个）"},"children":[]}]}]},{"data":{"id":"davq364jqcg0","created":1750865690292,"text":"死锁检测算法"},"children":[{"data":{"id":"davq9e6xkmw0","created":1750866178037,"text":"依次消除与不阻塞进程相连的边，直到无边可消"},"children":[]},{"data":{"id":"davq9zeveu80","created":1750866224228,"text":"注：所谓不阻塞进程是指其申请的资源数还足够的进程"},"children":[]},{"data":{"id":"davqafy3q480","created":1750866260219,"text":"死锁定理：若资源分配图是不可完全简化的，说明发生了死锁"},"children":[]}]}]},{"data":{"id":"davq2py7n9s0","created":1750865655080,"text":"死锁的解除"},"children":[{"data":{"id":"davq3bdfli00","created":1750865701713,"text":"资源剥夺法"},"children":[]},{"data":{"id":"davq3fhz76o0","created":1750865710695,"text":"撤销进程法（终止进程法）"},"children":[]},{"data":{"id":"davq3r8wsog0","created":1750865736268,"text":"进程回退法"},"children":[]}]}]}]}]}]}]},{"data":{"id":"dao0q5ulhgg0","created":1750083223512,"text":"内存管理","expandState":"expand"},"children":[{"data":{"id":"dao0uqttxzc0","created":1750083582635,"text":"内存管理概念","expandState":"expand"},"children":[{"data":{"id":"davqg85w2bc0","created":1750866713461,"text":"内存的基础知识","expandState":"expand"},"children":[{"data":{"id":"daw3yzo2iko0","created":1750904858317,"text":"什么是内存，有何作用"},"children":[{"data":{"id":"daw3z5vnxlk0","created":1750904871837,"text":"存储单元、内存地址 的概念和联系"},"children":[]},{"data":{"id":"daw3zfvrl9c0","created":1750904893611,"text":"按字节编址 vs 按字编址"},"children":[]}]},{"data":{"id":"daw3zrkk3rc0","created":1750904919055,"text":"进程运行的基本原理"},"children":[{"data":{"id":"daw3zz3ylio0","created":1750904935465,"text":"指令的工作原理"},"children":[{"data":{"id":"daw40huhn7s0","created":1750904976252,"text":"操作码+若干参数（可能包含地址参数）"},"children":[]}]},{"data":{"id":"daw40xxq88g0","created":1750905011276,"text":"逻辑地址（相对地址） vs 物理地址（绝对地址）"},"children":[]},{"data":{"id":"daw41iwhqyg0","created":1750905056914,"text":"从写程序到程序运行"},"children":[{"data":{"id":"daw423gzoo00","created":1750905101689,"text":"编辑源代码文件"},"children":[]},{"data":{"id":"daw428fhfe80","created":1750905112481,"text":"编译"},"children":[{"data":{"id":"daw44su1ta80","created":1750905313626,"text":"由源代码文件生成目标模块（高级语言“翻译”为机器语言）"},"children":[]}]},{"data":{"id":"daw44mw9rr40","created":1750905300700,"text":"链接"},"children":[{"data":{"id":"daw45fwz4uo0","created":1750905363869,"text":"由目标模块生成装入模块，链接后形成完整的逻辑地址"},"children":[]}]},{"data":{"id":"daw44pf58ls0","created":1750905306195,"text":"装入"},"children":[{"data":{"id":"daw4616j9fs0","created":1750905410160,"text":"将装入模块装入内存，装入后形成物理地址"},"children":[]}]}]},{"data":{"id":"daw41s4fnp40","created":1750905076985,"text":"三种链接方式"},"children":[{"data":{"id":"daw46mk4fbs0","created":1750905456694,"text":"静态链接"},"children":[{"data":{"id":"daw46rn7grk0","created":1750905467764,"text":"装入前链接成一个完整装入模块"},"children":[]}]},{"data":{"id":"daw472sgioo0","created":1750905492026,"text":"装入时动态链接"},"children":[{"data":{"id":"daw478oha200","created":1750905504846,"text":"运行前边装入边链接"},"children":[]}]},{"data":{"id":"daw47mgoo8o0","created":1750905534850,"text":"运行时动态链接"},"children":[{"data":{"id":"daw47rq57kw0","created":1750905546306,"text":"运行时需要目标模块才装入并链接"},"children":[]}]}]},{"data":{"id":"daw41w3fl000","created":1750905085631,"text":"三种装入方式"},"children":[{"data":{"id":"daw486uib4w0","created":1750905579221,"text":"绝对装入"},"children":[{"data":{"id":"daw48axb8ww0","created":1750905588098,"text":"编译时产生绝对地址"},"children":[]}]},{"data":{"id":"daw48ixa4e80","created":1750905605510,"text":"可重定位装入"},"children":[{"data":{"id":"daw48ott7rs0","created":1750905618361,"text":"装入时将逻辑地址转换为物理地址"},"children":[]}]},{"data":{"id":"daw491ctc340","created":1750905645632,"text":"动态运行时装入"},"children":[{"data":{"id":"daw497y4jmo0","created":1750905659981,"text":"运行时将逻辑地址转换为物理地址，需设置重定位寄存器"},"children":[]}]}]}]}]},{"data":{"id":"davqgcroj800","created":1750866723486,"text":"内存管理的概念","expandState":"expand"},"children":[{"data":{"id":"daw4b9zeok80","created":1750905821140,"text":"内存空间的分配与回收"},"children":[{"data":{"id":"daw5so8og8w0","created":1750910005477,"text":"连续分配管理方式"},"children":[{"data":{"id":"daw5t2avkts0","created":1750910036085,"text":"单一连续分配"},"children":[]},{"data":{"id":"daw5t5ty9ts0","created":1750910043768,"text":"固定分区分配"},"children":[]},{"data":{"id":"daw5t9ktic00","created":1750910051923,"text":"动态分区分配"},"children":[]}]},{"data":{"id":"daw5su8ugpc0","created":1750910018547,"text":"非连续分配管理方式"},"children":[{"data":{"id":"daw7obu7xog0","created":1750915307244,"text":"基本分页存储管理"},"children":[]},{"data":{"id":"daw7oguua0g0","created":1750915318166,"text":"基本分段存储管理"},"children":[]},{"data":{"id":"daw7oplkqrs0","created":1750915337196,"text":"段页式存储管理"},"children":[]}]}]},{"data":{"id":"daw4bgxr1ts0","created":1750905836278,"text":"内存空间的扩充（实现虚拟性）"},"children":[{"data":{"id":"daw5sbklvew0","created":1750909977900,"text":"覆盖技术"},"children":[]},{"data":{"id":"daw5sdpjfdk0","created":1750909982552,"text":"交换技术"},"children":[]},{"data":{"id":"daw5sg2du200","created":1750909987682,"text":"虚拟存储技术"},"children":[]}]},{"data":{"id":"daw4bpcwaio0","created":1750905854608,"text":"地址转换"},"children":[{"data":{"id":"daw4bt1p7c80","created":1750905862638,"text":"操作系统负责实现逻辑地址到物理地址的转换"},"children":[]},{"data":{"id":"daw5jat2qw80","created":1750909270958,"text":"三种方式"},"children":[{"data":{"id":"daw5jdsmiug0","created":1750909277461,"text":"绝对装入：编译器负责地址转换（单道程序阶段，无操作系统）"},"children":[]},{"data":{"id":"daw5jzj578o0","created":1750909324777,"text":"可重定位装入：装入程序负责地址转换（早期多道批处理阶段）"},"children":[]},{"data":{"id":"daw5kj21nlc0","created":1750909367278,"text":"动态运行时装入：运行时才进行地址转换（现代操作系统）"},"children":[]}]}]},{"data":{"id":"daw5l0dsrfk0","created":1750909404994,"text":"存储保护"},"children":[{"data":{"id":"daw5l4npdnc0","created":1750909414300,"text":"保证各进程在自己的内存空间内运行，不会越界访问"},"children":[]},{"data":{"id":"daw5lhjjzo00","created":1750909442348,"text":"两种方式"},"children":[{"data":{"id":"daw5lkxci0w0","created":1750909449712,"text":"设置上下限寄存器"},"children":[]},{"data":{"id":"daw5lq1pc940","created":1750909460859,"text":"利用重定位寄存器、界地址寄存器进行判断"},"children":[]}]}]}]},{"data":{"id":"davqgl24s1c0","created":1750866741532,"text":"进程的内存映像"},"children":[]},{"data":{"id":"davqgqe9iu00","created":1750866753149,"text":"覆盖与交换","expandState":"expand"},"children":[{"data":{"id":"daw5mysc5080","created":1750909558248,"text":"覆盖技术"},"children":[{"data":{"id":"daw5nd2kktc0","created":1750909589342,"text":"一个固定区"},"children":[{"data":{"id":"daw5nh73duw0","created":1750909598323,"text":"存放最活跃的程序段"},"children":[]},{"data":{"id":"daw5nnzikz40","created":1750909613102,"text":"固定区中的程序段在运行过程中不会调入调出"},"children":[]}]},{"data":{"id":"daw5o7qg2ko0","created":1750909656089,"text":"若干覆盖区"},"children":[{"data":{"id":"daw5obrybe80","created":1750909664887,"text":"不可能同时被访问程序段可共享一个覆盖区"},"children":[]},{"data":{"id":"daw5oqay78w0","created":1750909696511,"text":"覆盖区中的程序段在运行过程中会根据需要调入调出"},"children":[]}]}]},{"data":{"id":"daw5n2i25l40","created":1750909566334,"text":"交换技术"},"children":[{"data":{"id":"daw5pe7g6ao0","created":1750909748542,"text":"内存紧张时，换出某些进程以腾出内存空间，再换入某些进程"},"children":[]},{"data":{"id":"daw5q019yg00","created":1750909796058,"text":"磁盘分为文件区和对换区，换出的进程放在对换区"},"children":[]}]},{"data":{"id":"daw5n5uryjs0","created":1750909573634,"text":"覆盖与交换的区别"},"children":[{"data":{"id":"daw5qjg2foo0","created":1750909838311,"text":"覆盖是在同一个程序或进程中的"},"children":[]},{"data":{"id":"daw5qrx3ezk0","created":1750909856755,"text":"交换是在不同进程（或作业）之间的"},"children":[]}]}]},{"data":{"id":"davqgv53vgo0","created":1750866763480,"text":"连续分配管理方式","expandState":"expand"},"children":[{"data":{"id":"daw7emch3hc0","created":1750914546474,"text":"单一连续分配"},"children":[{"data":{"id":"daw7ew55p0g0","created":1750914567800,"text":"只支持单道程序，内存分为系统区和用户区，用户程序放在用户区"},"children":[]},{"data":{"id":"daw7fuci2jk0","created":1750914642254,"text":"无外部碎片，有内部碎片"},"children":[]}]},{"data":{"id":"daw7g5g26p40","created":1750914666414,"text":"固定分区分配"},"children":[{"data":{"id":"daw7ga435uo0","created":1750914676574,"text":"支持多道程序，内存用户空间分为若干个固定大小的分区，每个分区只能装一道作业"},"children":[]},{"data":{"id":"daw7hextwaw0","created":1750914765444,"text":"无外部碎片，有内部碎片"},"children":[]},{"data":{"id":"daw7izfi6qo0","created":1750914888412,"text":"两种分区方式"},"children":[{"data":{"id":"daw7j7fqzf40","created":1750914905841,"text":"分区大小相等"},"children":[]},{"data":{"id":"daw7jax7jgw0","created":1750914913427,"text":"分区大小不等"},"children":[]}]}]},{"data":{"id":"daw7jhf1l2w0","created":1750914927566,"text":"动态分区分配"},"children":[{"data":{"id":"daw7jnu6mdc0","created":1750914941543,"text":"支持多道程序，在进程装入内存时，根据进程的大小动态地建立分区"},"children":[]},{"data":{"id":"daw7kbkyx5s0","created":1750914993229,"text":"无内部碎片，有外部碎片"},"children":[]},{"data":{"id":"daw7kizztq00","created":1750915009374,"text":"外部碎片可用“紧凑”技术来解决"},"children":[]},{"data":{"id":"daw7ktqobdk0","created":1750915032755,"text":"回收内存分区时，可能遇到四种情况"},"children":[{"data":{"id":"daw7l5yk2rc0","created":1750915059353,"text":"回收区之后有相邻的空闲分区"},"children":[]},{"data":{"id":"daw7lgyugnc0","created":1750915083315,"text":"回收区之前有相邻的空闲分区"},"children":[]},{"data":{"id":"daw7lufjmk80","created":1750915112623,"text":"回收区前、后都有相邻的空闲分区"},"children":[]},{"data":{"id":"daw7m52aw4w0","created":1750915135767,"text":"回收区前、后都没有相邻的空闲分区"},"children":[]}]}]}]},{"data":{"id":"davqh0sk9ko0","created":1750866775782,"text":"动态分区分配算法","expandState":"expand"},"children":[{"data":{"id":"daw7my5ty0o0","created":1750915199107,"text":"首次适应算法（First Fit）"},"children":[]},{"data":{"id":"daw7n7jghyw0","created":1750915219522,"text":"最佳适应算法（Best Fit）"},"children":[]},{"data":{"id":"daw7nidq8ds0","created":1750915243120,"text":"最坏适应算法（Worst Fit）"},"children":[]},{"data":{"id":"daw7nru3x9k0","created":1750915263702,"text":"邻近适应算法（Next Fit）"},"children":[]}]},{"data":{"id":"davqh7dq3hk0","created":1750866790122,"text":"基本分页存储管理的基本概念","expandState":"collapse"},"children":[{"data":{"id":"daw7p5cu1s80","created":1750915371496,"text":"基本分页存储管理的思想：把进程分页，各个页面可离散地放到各个的内存块中"},"children":[]},{"data":{"id":"daw7qnh3q6o0","created":1750915489301,"text":"易混概念"},"children":[{"data":{"id":"daw7qxs7fy00","created":1750915511740,"text":"“页框、页帧、内存块、物理块、物理页”VS “页、页面”"},"children":[]},{"data":{"id":"daw87rdzv200","created":1750916830011,"text":"“页框号、页帧号、内存块号、物理块号、物理页号”VS “页号、页面号”"},"children":[]}]},{"data":{"id":"dawcegviu7c0","created":1750928640115,"text":"页表"},"children":[{"data":{"id":"dawcej8chcw0","created":1750928645244,"text":"页表记录了页面和实际存放的内存块之间的映射关系"},"children":[]},{"data":{"id":"dawcf67kmfc0","created":1750928695263,"text":"一个进程对应一张页表，进程的每一页对应一个页表项，每个页表项由“页号”和“块号”组成"},"children":[]},{"data":{"id":"dawcfya0xk00","created":1750928756361,"text":"每个页表项的大小是相同的，页号是“隐含”的"},"children":[]},{"data":{"id":"dawcgdk1vbk0","created":1750928789619,"text":"i号页表项存放地址=页表地址+i*页表项大小"},"children":[]}]},{"data":{"id":"dawcgtf75zk0","created":1750928824154,"text":"逻辑地址结构——可拆分为【页号P，页内偏移量W】"},"children":[{"data":{"id":"dawchbdi4qo0","created":1750928863234,"text":"页号=逻辑地址/页面大小；页内偏移量=逻辑地址%页面大小"},"children":[]},{"data":{"id":"dawchvt4ci80","created":1750928907714,"text":"如果页面大小刚好是2的整数次幂呢？"},"children":[]}]},{"data":{"id":"dawciac1rjc0","created":1750928939333,"text":"如何实现地址转换"},"children":[{"data":{"id":"dawcigbu8140","created":1750928952381,"text":"1.计算出逻辑地址对应的【页号，页内偏移量】"},"children":[]},{"data":{"id":"dawcit047ew0","created":1750928979971,"text":"2.找到对应页面在内存中的存放位置（查页表）"},"children":[]},{"data":{"id":"dawcjabc4l40","created":1750929017654,"text":"3.物理地址=页面地址+页内偏移量"},"children":[]}]}]},{"data":{"id":"davqhxssufk0","created":1750866847630,"text":"基本地址变换机构","expandState":"collapse"},"children":[{"data":{"id":"dawckseajcw0","created":1750929135379,"text":"页表寄存器的作用"},"children":[{"data":{"id":"dawcl89swns0","created":1750929169936,"text":"存放页表起始地址"},"children":[]},{"data":{"id":"dawclg4ibrs0","created":1750929187030,"text":"存放页表长度"},"children":[]}]},{"data":{"id":"dawckzwcrl40","created":1750929151709,"text":"地址变换过程"},"children":[{"data":{"id":"dawclnx3da80","created":1750929203996,"text":"1. 根据逻辑地址算出页号、页内偏移量"},"children":[]},{"data":{"id":"dawclxl337k0","created":1750929225038,"text":"2. 页号的合法性检查（与页表长度对比）"},"children":[]},{"data":{"id":"dawcmeewxr40","created":1750929261670,"text":"3. 若页号合法，再根据页表起始地址、页号找到对应页表项"},"children":[]},{"data":{"id":"dawcmz7woy80","created":1750929306959,"text":"4. 根据页表项中记录的内存块号、页内偏移量 得到最终的物理地址"},"children":[]},{"data":{"id":"dawcnt0dfs80","created":1750929371807,"text":"5. 访问物理内存对应的内存单元"},"children":[]}]},{"data":{"id":"dawcl3h7c7k0","created":1750929159500,"text":"其他小细节"},"children":[{"data":{"id":"dawco50nbg80","created":1750929397945,"text":"页内偏移量位数与页面大小之间的关系（要能用其中一个条件推出另一个条件）"},"children":[]},{"data":{"id":"dawcouigjaw0","created":1750929453441,"text":"页式管理中地址是一维的"},"children":[]},{"data":{"id":"dawcp8t0rxs0","created":1750929484555,"text":"实际应用中，通常使一个页框恰好能放入整数个页表项"},"children":[]},{"data":{"id":"dawcps18qyg0","created":1750929526411,"text":"为了方便找到页表项，页表一般是放在连续的内存块中的"},"children":[]}]}]},{"data":{"id":"davqi8942ug0","created":1750866870384,"text":"具有快表的地址变换机构","expandState":"collapse"},"children":[{"data":{"id":"dawcrl69fxc0","created":1750929668205,"text":"什么是快表（TLB）"},"children":[]},{"data":{"id":"dawcrqa6tiw0","created":1750929679327,"text":"引入快表后，地址的变换过程"},"children":[]},{"data":{"id":"dawcrwr559s0","created":1750929693413,"text":"局部性原理"},"children":[]}]},{"data":{"id":"davqijvxpbs0","created":1750866895709,"text":"两级页表","expandState":"collapse"},"children":[{"data":{"id":"dawgpydy3200","created":1750940824680,"text":"单极页表存在的问题"},"children":[{"data":{"id":"dawgq67nmkw0","created":1750940841713,"text":"所有页表项必须连续存放，页表过大时需要很大的连续空间"},"children":[]},{"data":{"id":"dawgqq93rnc0","created":1750940885337,"text":"在一段时间内并非所有页面都用得到，因此没必要让整个页表常驻内存"},"children":[]}]},{"data":{"id":"dawgrk09esg0","created":1750940950105,"text":"两级页表"},"children":[{"data":{"id":"dawgrnilzts0","created":1750940957745,"text":"将长长的页表再分页"},"children":[]},{"data":{"id":"dawgrygqkkg0","created":1750940981577,"text":"逻辑地址结构：（一级页号，二级页号，页内偏移量）"},"children":[]},{"data":{"id":"dawgsg3rfjk0","created":1750941019974,"text":"注意几个术语：页目录表/外层页表/顶级页表"},"children":[]}]},{"data":{"id":"dawgswv1c2w0","created":1750941056452,"text":"如何实现地址变换"},"children":[{"data":{"id":"dawgt6rzii80","created":1750941078035,"text":"1、按照地址结构将逻辑地址拆分成三部分"},"children":[]},{"data":{"id":"dawgtnnpork0","created":1750941114782,"text":"2、从PCB中读出页目录表始址，根据一级页号查页目录表，找到下一级页表在内存中的存放位置"},"children":[]},{"data":{"id":"dawgv67j0fc0","created":1750941233526,"text":"3、根据二级页号查表，找到最终想访问的内存页号"},"children":[]},{"data":{"id":"dawgvuawc9s0","created":1750941285973,"text":"4、结合页内偏移量得到物理地址"},"children":[]}]},{"data":{"id":"dawgw9l4c0w0","created":1750941319243,"text":"几个细节"},"children":[{"data":{"id":"dawgwjpov2g0","created":1750941341287,"text":"多级页表中，各级页表的大小不能超过一个页面。若两级页表不够，可以分更多级"},"children":[]},{"data":{"id":"dawgy1rp20o0","created":1750941458955,"text":"多级页表的访存次数（假设没有快表机构）——N级页表访问一个逻辑地址需要N+1次访存"},"children":[]}]}]},{"data":{"id":"davqipwm5c00","created":1750866908811,"text":"基本分段存储管理方式","expandState":"collapse"},"children":[{"data":{"id":"dawgzaw2ws00","created":1750941557175,"text":"分段"},"children":[{"data":{"id":"dawgzdci7rs0","created":1750941562522,"text":"将地址空间按照程序自身的逻辑关系划分为若干个段，每段从0开始编址"},"children":[]},{"data":{"id":"dawh04wh7n40","created":1750941622503,"text":"每个段在内存中占据连续空间，但各段之间可以不相邻"},"children":[]},{"data":{"id":"dawh0n0cgc80","created":1750941661919,"text":"逻辑地址结构：（段号，段内地址）"},"children":[]}]},{"data":{"id":"dawh0xegkps0","created":1750941684540,"text":"段表"},"children":[{"data":{"id":"dawh3nx2log0","created":1750941898990,"text":"记录逻辑段到实际存储地址的映射关系"},"children":[]},{"data":{"id":"dawh42yc97k0","created":1750941931718,"text":"每个段对应一个段表项。各段表项长度相同，由段号（隐含）、段长、基址组成"},"children":[]}]},{"data":{"id":"dawh5aw0lug0","created":1750942027356,"text":"地址变换"},"children":[{"data":{"id":"dawh5ejrh2o0","created":1750942035322,"text":"1. 由逻辑地址得到段号、段内地址"},"children":[]},{"data":{"id":"dawh5oix8pk0","created":1750942057039,"text":"2. 段号与段表寄存器中的段长度比较，检查是否越界"},"children":[]},{"data":{"id":"dawh6bdkqi80","created":1750942106782,"text":"3. 由段表始址、段号找到对应段表项"},"children":[]},{"data":{"id":"dawh6rh0rw80","created":1750942141819,"text":"4. 根据段表中记录的段长，检查段内地址是否越界"},"children":[]},{"data":{"id":"dawh76y1jko0","created":1750942175500,"text":"5. 由段表中的“基址+段内地址”得到最终的物理地址"},"children":[]},{"data":{"id":"dawh7p57ij40","created":1750942215115,"text":"6. 访问目标单元"},"children":[]}]},{"data":{"id":"dawh8ey584g0","created":1750942271284,"text":"分段 VS 分页"},"children":[{"data":{"id":"dawh8woeo480","created":1750942309878,"text":"分页对用户不可见，分段对用户可见"},"children":[]},{"data":{"id":"dawh94m3cns0","created":1750942327152,"text":"分页的地址空间是一维的，分段的地址空间是二维的"},"children":[]},{"data":{"id":"dawh9ss6ebk0","created":1750942379763,"text":"分段更容易实现信息的共享和保护（纯代码/可重入代码可以共享）"},"children":[]},{"data":{"id":"dawhafjopao0","created":1750942429315,"text":"分页（单极页表）、分段访问一个逻辑地址都需要两次访存，分段存储中也可以引入快表机构"},"children":[]}]}]},{"data":{"id":"davqj16ayx40","created":1750866933341,"text":"段页式管理方式","expandState":"collapse"},"children":[{"data":{"id":"dawhbz9qtcw0","created":1750942550614,"text":"分段+分页"},"children":[{"data":{"id":"dawhc3h8s6g0","created":1750942559774,"text":"将地址空间按照程序自身的逻辑关系划分为若干个段，在将各段分为大小相等的页面"},"children":[]},{"data":{"id":"dawhd8wuiyo0","created":1750942649966,"text":"将内存空间分为与页面大小相等的一个个内存块，系统以块为单位为进程分配内存"},"children":[]},{"data":{"id":"dawhg7fibo00","created":1750942881833,"text":"逻辑地址结构：（段号，页号，页内偏移量）"},"children":[]}]},{"data":{"id":"dawhlwz8mh40","created":1750943329267,"text":"段表、页表"},"children":[{"data":{"id":"dawhn8qsmrs0","created":1750943433242,"text":"每个段对应一个段表项。各段表项长度相同，由段号（隐含）、页表长度、页表存放地址 组成"},"children":[]},{"data":{"id":"dawhoi6gv5k0","created":1750943532145,"text":"每个页对应一个页表项。各页表项长度相同，由页号（隐含）、页面存放的内存块号 组成"},"children":[]}]},{"data":{"id":"dawhpscrc8o0","created":1750943632657,"text":"地址变换"},"children":[{"data":{"id":"dawhqd47z680","created":1750943677853,"text":"1、由逻辑地址得到段号、页号、页内偏移量"},"children":[]},{"data":{"id":"dawhqzxqz740","created":1750943727528,"text":"2、段号与段表寄存器中的段长度比较，检查是否越界"},"children":[]},{"data":{"id":"dawhrmr2m7s0","created":1750943777190,"text":"3、由段表始址、段号找到对应段表项"},"children":[]},{"data":{"id":"dawhsa5nxio0","created":1750943828138,"text":"4、根据段表中记录的页表长度，检查页号是否越界"},"children":[]},{"data":{"id":"dawhstlt1ig0","created":1750943870473,"text":"5、由段表中的页表地址、页号得到查询页表，找到相应页表项"},"children":[]},{"data":{"id":"dawhtpdl2i00","created":1750943939633,"text":"6、由页面存放的内存块号、页内偏移量得到最终的物理地址"},"children":[]},{"data":{"id":"dawhudfxmi00","created":1750943992018,"text":"7、访问目标单元"},"children":[]}]},{"data":{"id":"dawhpxi2glc0","created":1750943643862,"text":"访问一个逻辑地址所需访存次数"},"children":[{"data":{"id":"dawhv7fo6lc0","created":1750944057306,"text":"第一次——查段表、第二次——查页表、第三次——访问目标单元"},"children":[]},{"data":{"id":"dawhvuguzt40","created":1750944107443,"text":"可引入快表机构，以段号和页号为关键字查询快表，即可直接找到最终的目标页面存放位置。引入快表后仅需一次访存"},"children":[]}]}]}]},{"data":{"id":"dao0uyqmnjc0","created":1750083599855,"text":"虚拟内存管理","expandState":"expand"},"children":[{"data":{"id":"davqjfuucug0","created":1750866965300,"text":"虚拟内存的基本概念","expandState":"collapse"},"children":[{"data":{"id":"dawi19vfnvk0","created":1750944532797,"text":"传统存储管理方式的特征、缺点"},"children":[{"data":{"id":"dawi2ozuhts0","created":1750944644080,"text":"一次性：作业数据必须一次全部调入内存"},"children":[]},{"data":{"id":"dawi30p8zmw0","created":1750944669561,"text":"驻留性：作业数据在整个运行期间都会常驻内存"},"children":[]}]},{"data":{"id":"dawi1o5f0bk0","created":1750944563876,"text":"局部性原理"},"children":[{"data":{"id":"dawi3vdnxr40","created":1750944736340,"text":"时间局部性：现在访问的指令、数据在不久后很可能会被再次访问"},"children":[]},{"data":{"id":"dawi4efwy8w0","created":1750944777835,"text":"空间局部性：现在访问的内存单元周围的内存空间，很可能在不久后会被访问"},"children":[]},{"data":{"id":"dawi5evygzk0","created":1750944857169,"text":"高速缓存技术：使用频繁的数据放到更高速的存储器中"},"children":[]}]},{"data":{"id":"dawi1v6zhmw0","created":1750944579208,"text":"虚拟内存的定义和特征"},"children":[{"data":{"id":"dawi6cc3ju00","created":1750944929979,"text":"程序不需全部装入即可运行，运行时根据需要动态调入数据，若内存不够，还需换出一些数据"},"children":[]},{"data":{"id":"dawi7l59u6o0","created":1750945027522,"text":"特征"},"children":[{"data":{"id":"dawi7o2yum00","created":1750945033913,"text":"多次性：无需在作业运行时一次性全部装入内存，而是允许被分成多次调入内存。"},"children":[]},{"data":{"id":"dawi8wqy1sg0","created":1750945131141,"text":"对换性：无需在作业运行时一直常驻内存，而是允许在作业运行过程中，将作业换入、换出"},"children":[]},{"data":{"id":"dawia0m0zds0","created":1750945217915,"text":"虚拟性：从逻辑上扩充了内存的容量，使用户看到的内存容量，远大于实际的容量"},"children":[]}]}]},{"data":{"id":"dawi22tfe2g0","created":1750944595803,"text":"如何实现虚拟内存技术"},"children":[{"data":{"id":"dawib44uvi00","created":1750945303948,"text":"访问的信息不在内存时，由操作系统负责将所需信息从外存调入内存（请求调页功能）"},"children":[]},{"data":{"id":"dawic39vxds0","created":1750945380439,"text":"内存空间不够时，将内存中暂时用不到的信息换出到外存（页面置换功能）"},"children":[]},{"data":{"id":"dawig54fx7k0","created":1750945697920,"text":"虚拟内存的实现"},"children":[{"data":{"id":"dawigabdajk0","created":1750945709223,"text":"请求分页存储管理"},"children":[]},{"data":{"id":"dawigg9wyh40","created":1750945722196,"text":"请求分段存储管理"},"children":[]},{"data":{"id":"dawigmpeqfk0","created":1750945736194,"text":"请求段页式存储管理"},"children":[]}]}]}]},{"data":{"id":"davqjntmnio0","created":1750866982641,"text":"请求分页管理方式","expandState":"collapse"},"children":[{"data":{"id":"dawiidyu0xc0","created":1750945873901,"text":"页表机制"},"children":[{"data":{"id":"dawijb8a45k0","created":1750945946306,"text":"在基本分页的基础上增加了几个表项"},"children":[]},{"data":{"id":"dawijotgt400","created":1750945975885,"text":"状态位：表示页面是否已在内存中"},"children":[]},{"data":{"id":"dawikem7mqg0","created":1750946032043,"text":"访问字段：记录最近被访问过几次，或记录上次访问的时间，供置换算法选择换出页面时参考"},"children":[]},{"data":{"id":"dawilkdz5nk0","created":1750946122970,"text":"修改位：表示页面调入内存后是否被修改过，只有修改过的页面才需在置换时写回外存"},"children":[]},{"data":{"id":"dawimif93tc0","created":1750946197057,"text":"外存地址：页面在外存中存放的位置"},"children":[]}]},{"data":{"id":"dawiihl1ifk0","created":1750945881774,"text":"缺页中断机构"},"children":[{"data":{"id":"dawimuwy05s0","created":1750946224248,"text":"找到页表项后检查页面是否已在内存，若没在内存，产生缺页中断"},"children":[]},{"data":{"id":"dawio4nw29c0","created":1750946323833,"text":"缺页中断处理中，需要将目标页面调入内存，有必要时还要换出页面"},"children":[]},{"data":{"id":"dawiowog9k00","created":1750946384817,"text":"缺页中断属于内中断，属于内中断中的“故障”，即可能被系统修复的异常"},"children":[]},{"data":{"id":"dawipt5d39s0","created":1750946455496,"text":"一条指令在执行过程中可能产生多次缺页中断"},"children":[]}]},{"data":{"id":"dawiipdx1000","created":1750945898757,"text":"地址变换机构（重点关注与基本分页不同的地方）"},"children":[{"data":{"id":"dawiqew91j40","created":1750946502835,"text":"找到页表项是需要检查页面是否在内存中"},"children":[]},{"data":{"id":"dawir40trgw0","created":1750946557531,"text":"若页面不在内存中，需要请求调页"},"children":[]},{"data":{"id":"dawirsjqa740","created":1750946610917,"text":"若内存空间不够，还需换出页面"},"children":[]},{"data":{"id":"dawis0uls0g0","created":1750946628988,"text":"页面调入内存后，需要修改相应页表项"},"children":[]}]}]},{"data":{"id":"davqjvwsors0","created":1750867000246,"text":"页面置换算法","expandState":"collapse"},"children":[{"data":{"id":"dawit21b2co0","created":1750946709935,"text":"最佳置换算法（OPT）"},"children":[]},{"data":{"id":"dawit9z07m80","created":1750946727210,"text":"先进先出置换算法（FIFO）"},"children":[]},{"data":{"id":"dawitpi8x3c0","created":1750946761025,"text":"最近最久未使用置换算法（LRU）"},"children":[]},{"data":{"id":"dawiu00j4e80","created":1750946783898,"text":"时钟置换算法（CLOCK）"},"children":[]},{"data":{"id":"dawiuf9086w0","created":1750946817063,"text":"改进型的时钟置换算法"},"children":[]}]},{"data":{"id":"davqk0elfg80","created":1750867010030,"text":"页面分配策略","expandState":"collapse"},"children":[{"data":{"id":"dawiwe4s7nk0","created":1750946971359,"text":"驻留集","expandState":"expand"},"children":[{"data":{"id":"dawiy6denjc0","created":1750947111194,"text":"指请求分页存储管理中给进程分配的内存块集合"},"children":[]}]},{"data":{"id":"dawiwkxd6k80","created":1750946986148,"text":"页面分配、置换策略"},"children":[{"data":{"id":"dawiyyfbcaw0","created":1750947172260,"text":"固定分配 VS 可变分配：区别在于进程运行期间驻留集大小是否可变"},"children":[]},{"data":{"id":"dawizu0waqw0","created":1750947241045,"text":"局部置换 VS 全局置换：区别在于发生缺页时是否只能从进程自己的页面中选择一个换出"},"children":[]},{"data":{"id":"dawj17z80q80","created":1750947349783,"text":"固定分配局部置换：进程运行前就分配一定数量物理块，缺页时只能换出进程自己的某一页"},"children":[]},{"data":{"id":"dawj2cmf4h40","created":1750947438257,"text":"可变分配全局置换：只要缺页就分配新物理块，可能来自空闲物理块，也可能需换出别的进程页面"},"children":[]},{"data":{"id":"dawj3nihvc00","created":1750947540328,"text":"可变分配局部置换：频繁缺页的进程，多分配一些物理块；缺页率很低的进程，回收一些物理块。直到缺页率合适"},"children":[]}]},{"data":{"id":"dawiwua7p0w0","created":1750947006516,"text":"何时调入页面"},"children":[{"data":{"id":"dawj51m6wh40","created":1750947649391,"text":"预调页策略：一般用于进程运行前"},"children":[]},{"data":{"id":"dawj5qrzgs80","created":1750947704161,"text":"请求调页策略：进程运行前，发生缺页再调页"},"children":[]}]},{"data":{"id":"dawix3mghw80","created":1750947026847,"text":"从何处调页"},"children":[{"data":{"id":"dawj6soplk00","created":1750947786680,"text":"对换区——采用连续存储方式，速度更快；文件区——采用离散存储方式，速度更慢。"},"children":[]},{"data":{"id":"dawj7mnsfp40","created":1750947851928,"text":"对换区足够大：运行将数据从文件区复制到对换区，之后所有的页面调入、调出都是在内存与对换区之间进行"},"children":[]},{"data":{"id":"dawj8lsuxlc0","created":1750947928422,"text":"对换区不够大：不会修改的数据每次都从文件区调入；会修改的数据调出到对换区，需要时再从对换区调入"},"children":[]},{"data":{"id":"dawjaj1w2ww0","created":1750948079166,"text":"UNIX方式：第一次使用的页面都从文件区调入；调出的页面都写回对换区，再次使用时从对换区调入"},"children":[]}]},{"data":{"id":"dawix8uft6g0","created":1750947038214,"text":"抖动（颠簸）现象"},"children":[{"data":{"id":"dawjbsjr4vs0","created":1750948178201,"text":"页面频繁换入换出的现象。主要原因是分配给进程的物理块不够"},"children":[]}]},{"data":{"id":"dawixm3x2rs0","created":1750947067085,"text":"工作集"},"children":[{"data":{"id":"dawjcmcm95c0","created":1750948243073,"text":"在某段时间间隔里，进程实际访问页面的集合。驻留集大小一般不能小于工作集大小"},"children":[]}]}]},{"data":{"id":"davqk82xma80","created":1750867026739,"text":"内存映射文件","expandState":"collapse"},"children":[{"data":{"id":"dawje1rllns0","created":1750948354995,"text":"特性"},"children":[{"data":{"id":"dawjibbnx680","created":1750948689256,"text":"进程可使用系统调用，请求操作系统将文件映射到进程的虚拟地址空间"},"children":[]},{"data":{"id":"dawjj3suwvc0","created":1750948751246,"text":"以访问内存的方式读写文件"},"children":[]},{"data":{"id":"dawjjbhzisw0","created":1750948768003,"text":"进程关闭文件时，操作系统负责将文件数据写回磁盘，并解除内存映射"},"children":[]},{"data":{"id":"dawjk9jnsuo0","created":1750948842114,"text":"多个进程可以映射同一个文件，方便共享"},"children":[]}]},{"data":{"id":"dawje4lv2js0","created":1750948361179,"text":"优点"},"children":[{"data":{"id":"dawjksatdb40","created":1750948882938,"text":"程序员编程更简单，已建立映射的文件，只需按访问内存的方式读写即可"},"children":[]},{"data":{"id":"dawjm1a8how0","created":1750948980859,"text":"文件数据的读入/写出完全由操作系统负责，I/O效率可以由操作系统负责优化"},"children":[]}]}]}]}]},{"data":{"id":"dao0q720xeo0","created":1750083226138,"text":"文件管理","expandState":"expand"},"children":[{"data":{"id":"dao0v4gj2wg0","created":1750083612305,"text":"文件系统基础","expandState":"expand"},"children":[{"data":{"id":"davqknoqwkw0","created":1750867060710,"text":"初识文件管理","expandState":"collapse"},"children":[{"data":{"id":"dawjou24ba00","created":1750949200223,"text":"文件的定义：一组有意义的信息的集合"},"children":[]},{"data":{"id":"dawjpcd0i0w0","created":1750949240064,"text":"文件的属性：文件名、标识符、类型、位置、大小、保护信息……"},"children":[]},{"data":{"id":"dawjpzmwyw80","created":1750949290728,"text":"文件内部应该如何被组织起来（文件的逻辑结构）"},"children":[]},{"data":{"id":"dawjqqlch9c0","created":1750949349407,"text":"文件之间应该如何被组织起来（目录结构）"},"children":[]},{"data":{"id":"dawjr23cvq80","created":1750949374440,"text":"操作系统应向上提供哪些功能（create、delete、open、close、read、write系统调用"},"children":[]},{"data":{"id":"dawjsh5wi000","created":1750949485610,"text":"文件应如何存放在外存中（文件的物理结构）"},"children":[]},{"data":{"id":"dawjti0jfq00","created":1750949565827,"text":"操作系统如何管理外存中的空闲块（存储空间的管理）"},"children":[]},{"data":{"id":"dawjtwhg3mo0","created":1750949597324,"text":"操作系统需要提供的其他文件管理功能"},"children":[{"data":{"id":"dawjufj2klc0","created":1750949638781,"text":"文件共享"},"children":[]},{"data":{"id":"dawjuhr55uo0","created":1750949643623,"text":"文件保护"},"children":[]}]}]},{"data":{"id":"davqktt7nhs0","created":1750867074040,"text":"文件的逻辑结构","expandState":"collapse"},"children":[{"data":{"id":"dawjx07sn340","created":1750949840540,"text":"无结构文件"},"children":[{"data":{"id":"dawjx7qnp1c0","created":1750949856918,"text":"由二进制流或字符流组成，无明显的逻辑结构"},"children":[]}]},{"data":{"id":"dawjxrxt2540","created":1750949900886,"text":"有结构文件"},"children":[{"data":{"id":"dawjxz0i8540","created":1750949916287,"text":"由记录组成，分为定长记录、可变长记录"},"children":[]},{"data":{"id":"dawjycbbscw0","created":1750949945239,"text":"逻辑结构"},"children":[{"data":{"id":"dawjyftk0e00","created":1750949952872,"text":"顺序文件"},"children":[{"data":{"id":"dawjz87cr200","created":1750950014656,"text":"串结构：记录顺序与关键字无关"},"children":[]},{"data":{"id":"dawjzm5iyww0","created":1750950045020,"text":"顺序结构：记录按关键字顺序排列"},"children":[]},{"data":{"id":"dawjzw066zc0","created":1750950066464,"text":"可变长记录的顺序文件无法实现随机存取，定长记录可以"},"children":[]},{"data":{"id":"dawk0lq1tlk0","created":1750950122449,"text":"定长记录、顺序结构的顺序文件可以快速检索（根据关键字快速找到记录）"},"children":[]},{"data":{"id":"dawk1l7zwrs0","created":1750950199721,"text":"最大缺点：不方便增加/删除 记录"},"children":[]}]},{"data":{"id":"dawjyivqtzs0","created":1750949959534,"text":"索引文件"},"children":[{"data":{"id":"dawk1zxckbs0","created":1750950231729,"text":"建立一张索引表，每个记录对应一个表项。各记录不用保持顺序，方便增加/删除记录"},"children":[]},{"data":{"id":"dawk31l136o0","created":1750950313702,"text":"索引表本身就是定长记录的顺序文件，一个索引表项就是一条定长记录，因此索引文件可支持随机存取"},"children":[]},{"data":{"id":"dawk47nqsag0","created":1750950405291,"text":"若索引表按关键字顺序排列，则可支持快速检索"},"children":[]},{"data":{"id":"dawk4y0np3s0","created":1750950462668,"text":"解决了顺序文件不方便增/删记录的问题，同时让不定长记录的文件实现了随机存取，但索引表可能占用很多空间"},"children":[]}]},{"data":{"id":"dawjylz2z8g0","created":1750949966267,"text":"索引顺序文件"},"children":[{"data":{"id":"dawk6a68q200","created":1750950567491,"text":"将记录分组，每组对应一个索引表项"},"children":[]},{"data":{"id":"dawk6r8564w0","created":1750950604612,"text":"检索记录时先顺序查索引表，找到分组，再顺序查找分组"},"children":[]},{"data":{"id":"dawk7l02wbs0","created":1750950669428,"text":"当记录过多时，可建立多级索引表"},"children":[]}]}]}]}]},{"data":{"id":"davqlalk0kw0","created":1750867110583,"text":"文件目录","expandState":"collapse"},"children":[{"data":{"id":"dawyzsoxh680","created":1750992375903,"text":"文件控制块（实现文件目录的关键数据结构）"},"children":[{"data":{"id":"dawz0tf1krc0","created":1750992455846,"text":"一个文件对应一个FCB，一个FCB就是一个目录项，多个FCB组成文件目录"},"children":[]},{"data":{"id":"dawz1fsffqw0","created":1750992504545,"text":"对目录的操作：搜索、创建文件、删除文件、显示文件、修改文件"},"children":[]}]},{"data":{"id":"dawz07hov600","created":1750992408117,"text":"目录结构"},"children":[{"data":{"id":"dawz21avhvc0","created":1750992551372,"text":"单级目录结构"},"children":[{"data":{"id":"dawz2bq2j8w0","created":1750992574059,"text":"一个系统只有一张目录表，不允许文件重名"},"children":[]}]},{"data":{"id":"dawz2so6v7c0","created":1750992610951,"text":"两级目录结构"},"children":[{"data":{"id":"dawz2y5adhk0","created":1750992622868,"text":"不同用户的文件可以重名，但不能对文件进行分类"},"children":[]}]},{"data":{"id":"dawz3n28j0g0","created":1750992677103,"text":"多级（树形）目录结构"},"children":[{"data":{"id":"dawz3u9874o0","created":1750992692764,"text":"不同目录下的文件可以重名，可以对文件进行分类，不方便文件共享"},"children":[]},{"data":{"id":"dawz4irmxtc0","created":1750992746120,"text":"系统根据“文件路径”找到目标文件"},"children":[]},{"data":{"id":"dawz4xuzsqo0","created":1750992778974,"text":"从根目录出发的路径是“绝对路径”（“/照片/2015-08/自拍.jpg”）"},"children":[]},{"data":{"id":"dawz5uhkaw80","created":1750992849996,"text":"从“当前目录”出发的路径是“相对路径”（“/照片/2015-08/自拍.jpg”）"},"children":[]}]},{"data":{"id":"dawz73lmdu80","created":1750992948197,"text":"无环图目录结构"},"children":[{"data":{"id":"dawz7aq4p8o0","created":1750992963707,"text":"在树形目录结构的基础上，增加一些指向同一节点的有向边，使整个目录成为一个有向无环图"},"children":[]},{"data":{"id":"dawz8nq4or40","created":1750993070369,"text":"为共享结点设置一个共享计数器，计数器为0时才真正删除该结点"},"children":[]}]}]},{"data":{"id":"dawz0agv9p40","created":1750992414598,"text":"索引结点（对文件控制块的优化）"},"children":[{"data":{"id":"dawz9joh4ig0","created":1750993139926,"text":"除了文件名之外的所有信息都放在索引结点中，每个文件对应一个索引结点"},"children":[]},{"data":{"id":"dawza6jfl2o0","created":1750993189687,"text":"目录项中只包含文件名、索引结点指针，因此每个目录项的长度大幅减小"},"children":[]},{"data":{"id":"dawzb1o784g0","created":1750993257456,"text":"由于目录项长度减小，因此每个磁盘块可以存放更多个目录项，因此检索文件时磁盘I/O的次数就少了很多"},"children":[]}]}]},{"data":{"id":"davqldp4imo0","created":1750867117329,"text":"文件的物理结构","expandState":"collapse"},"children":[{"data":{"id":"dawkcgi31a80","created":1750951051453,"text":"操作系统需要对磁盘块进行哪些管理"},"children":[{"data":{"id":"dawkd08hrpc0","created":1750951094409,"text":"对非空闲磁盘块的管理（存放了文件数据的磁盘块）"},"children":[]},{"data":{"id":"dawkdkgz6kg0","created":1750951138457,"text":"对空闲磁盘块的管理"},"children":[]}]},{"data":{"id":"dawkdu1lgu80","created":1750951159295,"text":"文件的物理结构（文件分配方式）"},"children":[{"data":{"id":"dawked8x6a80","created":1750951201097,"text":"连续分配"},"children":[]},{"data":{"id":"dawkegoqzj40","created":1750951208584,"text":"链接分配"},"children":[{"data":{"id":"dawkek976s80","created":1750951216351,"text":"隐式链接"},"children":[]},{"data":{"id":"dawkenwzsk00","created":1750951224320,"text":"显式链接"},"children":[]}]},{"data":{"id":"dawketoz4400","created":1750951236896,"text":"索引分配"},"children":[]}]}]},{"data":{"id":"davqliorwcw0","created":1750867128191,"text":"逻辑结构VS物理结构","expandState":"collapse"},"children":[{"data":{"id":"dawkfs4kcio0","created":1750951311850,"text":"逻辑结构"},"children":[{"data":{"id":"dawkg07ct340","created":1750951329433,"text":"用户（文件创建者）的视角看到的亚子"},"children":[]},{"data":{"id":"dawkgek0jts0","created":1750951360673,"text":"在用户看来，整个文件占用连续的逻辑地址空间"},"children":[]},{"data":{"id":"dawkgyt6uwg0","created":1750951404763,"text":"文件内部的信息组织完全由用户自己决定，操作系统并不关心"},"children":[]}]},{"data":{"id":"dawkhoxhg600","created":1750951461619,"text":"物理结构"},"children":[{"data":{"id":"dawkhvxi0uw0","created":1750951476858,"text":"由操作系统决定文件采用什么物理结构存储"},"children":[]},{"data":{"id":"dawki65fny00","created":1750951499105,"text":"操作系统负责将逻辑地址转变为（逻辑块号，块内偏移量）的形式，并负责实现逻辑块号到物理块号的映射"},"children":[]}]}]},{"data":{"id":"davqlqbe2ls0","created":1750867144796,"text":"文件存储空间管理","expandState":"collapse"},"children":[{"data":{"id":"dawzce3j05s0","created":1750993362868,"text":"存储空间的划分与初始化"},"children":[{"data":{"id":"dawzde00zts0","created":1750993441021,"text":"文件卷（逻辑卷），目录区、文件区的概念"},"children":[]},{"data":{"id":"dawzds70vag0","created":1750993471919,"text":"目录区包含文件目录、空闲表、位示图、超级块等用于文件管理的数据"},"children":[]}]},{"data":{"id":"dawzck6c0js0","created":1750993376098,"text":"几种管理方法"},"children":[{"data":{"id":"dawzeudeaqo0","created":1750993555022,"text":"空闲表法"},"children":[{"data":{"id":"dawzfpc6iuo0","created":1750993622428,"text":"空闲表中记录每个连续空闲区的起始盘块号、盘快数"},"children":[]},{"data":{"id":"dawzgnk040w0","created":1750993696912,"text":"分配时可采用首次适应、最佳适应等策略；回收时注意表项的合并问题"},"children":[]}]},{"data":{"id":"dawzeyh3frc0","created":1750993563952,"text":"空闲链表法"},"children":[{"data":{"id":"dawzhddn8tk0","created":1750993753124,"text":"空闲盘块链"},"children":[{"data":{"id":"dawzht1yxs80","created":1750993787246,"text":"以盘块为单位组成一条空闲链"},"children":[]},{"data":{"id":"dawzi3z7xf40","created":1750993811025,"text":"分配时从链头依次取出空闲块，回收时将空闲块查到链尾"},"children":[]}]},{"data":{"id":"dawzhlmxoc80","created":1750993771100,"text":"空闲盘区链"},"children":[{"data":{"id":"dawzj2i5lfc0","created":1750993886180,"text":"以盘区为单位组成一条空闲链"},"children":[]},{"data":{"id":"dawzjcoqy000","created":1750993908347,"text":"分配时可采用首次适应、最佳适应等策略；回收时注意相邻空闲盘区合并的问题"},"children":[]}]}]},{"data":{"id":"dawzf45x5uw0","created":1750993576337,"text":"位示图法"},"children":[{"data":{"id":"dawzkapp0yo0","created":1750993982415,"text":"一个二进制位对应一个盘块。（字号，位号）或（行号，列号）与盘块号一一对应"},"children":[]},{"data":{"id":"dawzl4z3nfc0","created":1750994048287,"text":"重要考点：要能够自己推出盘块号——>（字号，位号）之间的相互转换公式"},"children":[]},{"data":{"id":"dawzm55grfs0","created":1750994127036,"text":"需要注意的题目条件"},"children":[{"data":{"id":"dawzmbjcepc0","created":1750994140936,"text":"二进制位0/1到底哪个代表空闲，哪个代表不空闲"},"children":[]},{"data":{"id":"dawzmxxk71s0","created":1750994189684,"text":"字号、位号、盘块号到底是从0开始还是从1开始"},"children":[]}]}]},{"data":{"id":"dawzfazlaa00","created":1750993591192,"text":"成组链接法"},"children":[{"data":{"id":"dawznmgba3s0","created":1750994243061,"text":"UNIX采用的策略，适合大型文件系统。理解即可，不方便用文字描述的知识点也很难作为考题"},"children":[]}]}]}]},{"data":{"id":"davqmjyftog0","created":1750867209317,"text":"文件的基本操作","expandState":"collapse"},"children":[{"data":{"id":"dawl948g2pc0","created":1750953610766,"text":"创建文件（create系统调用）"},"children":[{"data":{"id":"dawlbalr0g80","created":1750953781360,"text":"分配外存空间，创建目录项"},"children":[]}]},{"data":{"id":"dawl9du5z000","created":1750953631671,"text":"删除文件（delete系统调用）"},"children":[{"data":{"id":"dawlbngxrco0","created":1750953809367,"text":"回收外存空间，删除目录项"},"children":[]}]},{"data":{"id":"dawl9m417mo0","created":1750953649682,"text":"打开文件（open系统调用）"},"children":[{"data":{"id":"dawlbzvez8w0","created":1750953836364,"text":"将目录项中的信息复制到内存中的打开文件表中，并将打开文件表的索引号返回给用户，打开文件时并不会把文件数据直接读入内存。“索引号”也称“文件描述符”"},"children":[]},{"data":{"id":"dawldheoag80","created":1750953952898,"text":"打开文件之后，对文件的操作不再需要每次都查询目录，可以根据内存中的打开文件表进行操作"},"children":[]},{"data":{"id":"dawle95fxp40","created":1750954013289,"text":"每个进程有自己的打开文件表，系统中也有一张总的打开文件表"},"children":[]},{"data":{"id":"dawlf3za9q00","created":1750954080397,"text":"进程打开文件表中特有的属性：读写指针、访问权限（只读？读写？）"},"children":[]},{"data":{"id":"dawlfuu1g800","created":1750954138853,"text":"系统打开文件表中特有的属性：打开计数器（有多少个进程打开了该文件）"},"children":[]}]},{"data":{"id":"dawl9w6ehn40","created":1750953671593,"text":"关闭文件（close系统调用）"},"children":[{"data":{"id":"dawlgovkbxc0","created":1750954204249,"text":"将进程打开文件表中的相应表项删除"},"children":[]},{"data":{"id":"dawlh33dons0","created":1750954235197,"text":"系统打开文件表的打开计数器减1，若打开计数器为0，则删除系统表的表项"},"children":[]}]},{"data":{"id":"dawla3ob61s0","created":1750953687913,"text":"读文件（read系统调用）"},"children":[{"data":{"id":"dawlhuxba5k0","created":1750954295780,"text":"根据读指针、读入数据量、内存位置将文件数据从外存读入内存，“读/写文件”用“文件描述符”即可指明文件，不再需要用到“文件名”"},"children":[]}]},{"data":{"id":"dawla9ox1vk0","created":1750953701010,"text":"写文件（write系统调用）"},"children":[{"data":{"id":"dawlj2zlpfc0","created":1750954391697,"text":"根据写指针、写出数据量、内存位置 将文件数据从内存写出外存"},"children":[]}]}]},{"data":{"id":"davqmpdtgkg0","created":1750867221131,"text":"文件共享","expandState":"collapse"},"children":[{"data":{"id":"dawkzmwci280","created":1750952867752,"text":"基于索引结点的共享方式（硬链接）"},"children":[{"data":{"id":"dawl0v74uns0","created":1750952964183,"text":"各个用户的目录项指向同一个索引结点"},"children":[]},{"data":{"id":"dawl14sv26o0","created":1750952985088,"text":"索引结点中需要有链接计数 count"},"children":[]},{"data":{"id":"dawl1mlzwxc0","created":1750953023855,"text":"某用户想删除文件时，只是删除该用户的目录项，且count--"},"children":[]},{"data":{"id":"dawl2k4dcbs0","created":1750953096799,"text":"只有count==0时才能真正删除文件数据和索引结点，否则会导致指针悬空"},"children":[]}]},{"data":{"id":"dawl03aokyo0","created":1750952903447,"text":"基于符号链的共享方式（软链接）"},"children":[{"data":{"id":"dawl3vasiv40","created":1750953199496,"text":"在一个Link型的文件中记录共享文件的存放路径（Windows 快捷方式）"},"children":[]},{"data":{"id":"dawl4g1easw0","created":1750953244641,"text":"操作系统根据路径一层层查找目录，最终找到共享文件"},"children":[]},{"data":{"id":"dawl52wlmuw0","created":1750953294417,"text":"即使软链接指向的共享文件已被删除，Link型文件依然存在，只是通过Link型文件中的路径去查找共享文件会失败（找不到对应目录项）"},"children":[]},{"data":{"id":"dawl6uzvx800","created":1750953433929,"text":"由于用软链接的方式访问共享文件时要查询多级目录，会有多次磁盘I/O，因此用软链接访问共享文件的速度要比硬链接更慢"},"children":[]}]}]},{"data":{"id":"davqmsu76jk0","created":1750867228651,"text":"文件保护","expandState":"collapse"},"children":[{"data":{"id":"dawko5gjky80","created":1750951967785,"text":"口令保护"},"children":[{"data":{"id":"dawkoy3wh4w0","created":1750952030148,"text":"为文件设置一个“口令”，用户想要访问文件时需要提供口令，由系统验证口令是否正确"},"children":[]},{"data":{"id":"dawkpx81aig0","created":1750952106585,"text":"实现开销小，但“口令”一般存放在FCB或索引结点中（也就是存放在系统中）因此不太安全"},"children":[]}]},{"data":{"id":"dawko8bp12w0","created":1750951974023,"text":"加密保护"},"children":[{"data":{"id":"dawkqyyidb40","created":1750952188727,"text":"用一个“密码”对文件加密，用户想要访问文件时，需要提供相同的“密码”才能正确的解密"},"children":[]},{"data":{"id":"dawkrqrjoc80","created":1750952249256,"text":"安全性高，但加密/解密需要耗费一定的时间（Eg：异或加密）"},"children":[]}]},{"data":{"id":"dawkoiaqfm00","created":1750951995732,"text":"访问控制"},"children":[{"data":{"id":"dawksemz9zk0","created":1750952301222,"text":"用一个访问控制表（ACL）记录各个用户（或各组用户）对文件的访问权限"},"children":[]},{"data":{"id":"dawkw427pg80","created":1750952591655,"text":"访问类型"},"children":[{"data":{"id":"dawkwbuoe3k0","created":1750952608614,"text":"读：从文件中读数据"},"children":[]},{"data":{"id":"dawkwmk7t7s0","created":1750952631926,"text":"写：向文件中写数据"},"children":[]},{"data":{"id":"dawkwxvuf940","created":1750952656574,"text":"执行：将文件装入内存并执行"},"children":[]},{"data":{"id":"dawkxi9m4kg0","created":1750952700942,"text":"添加：将新信息添加到文件结尾部分"},"children":[]},{"data":{"id":"dawkxu7mbs80","created":1750952726943,"text":"删除：删除文件。释放空间"},"children":[]},{"data":{"id":"dawkyad3uew0","created":1750952762103,"text":"列表清单：列出文件名和文件属性"},"children":[]}]},{"data":{"id":"dawkynpn1e00","created":1750952791159,"text":"实现灵活，可以实现复杂的文件保护功能"},"children":[]}]}]}]},{"data":{"id":"dao0v61z7cw0","created":1750083615779,"text":"目录"},"children":[]},{"data":{"id":"dao0v6qww400","created":1750083617287,"text":"文件系统","expandState":"collapse"},"children":[{"data":{"id":"davqmwt91fk0","created":1750867237301,"text":"文件系统的层次结构"},"children":[]},{"data":{"id":"davqn219uqw0","created":1750867248670,"text":"文件系统布局"},"children":[]},{"data":{"id":"davqn8bh0r40","created":1750867262348,"text":"虚拟文件系统"},"children":[]}]}]},{"data":{"id":"dao0qc89gjc0","created":1750083237399,"text":"输入输出管理"},"children":[{"data":{"id":"dao0vmamoqg0","created":1750083651131,"text":"I/O管理概述","expandState":"expand"},"children":[{"data":{"id":"davqo3qm7go0","created":1750867330744,"text":"IO设备的基本概念和分类","expandState":"collapse"},"children":[{"data":{"id":"dawzqt2sb080","created":1750994492573,"text":"什么是I/O设备"},"children":[{"data":{"id":"dawzqzfeo680","created":1750994506397,"text":"将数据 Input/Output（输入/输出）计算机的外部设备"},"children":[]},{"data":{"id":"dawzwsp4hyw0","created":1750994961932,"text":"I/O设备由机械部件和电子部件组成"},"children":[]}]},{"data":{"id":"dawzrh9cojc0","created":1750994545213,"text":"按使用特性分类"},"children":[{"data":{"id":"dawzrqat4ps0","created":1750994564892,"text":"人机交互类外部设备"},"children":[]},{"data":{"id":"dawzry9jx7c0","created":1750994582230,"text":"存储设备"},"children":[]},{"data":{"id":"dawzs362yzs0","created":1750994592904,"text":"网络通信设备"},"children":[]}]},{"data":{"id":"dawzt0ootjc0","created":1750994665863,"text":"按传输速率分类"},"children":[{"data":{"id":"dawztwjn80g0","created":1750994735215,"text":"低速设备"},"children":[]},{"data":{"id":"dawzu18kto00","created":1750994745430,"text":"中速设备"},"children":[]},{"data":{"id":"dawzu4pisbk0","created":1750994752986,"text":"高速设备"},"children":[]}]},{"data":{"id":"dawzu8mcpo00","created":1750994761501,"text":"按信息交换的单位分类"},"children":[{"data":{"id":"dawzufx9q4o0","created":1750994777398,"text":"块设备（传输快，可寻址）"},"children":[]},{"data":{"id":"dawzuomrb940","created":1750994796354,"text":"字符设备（传输慢，不可寻址，常采用中断驱动方式）"},"children":[]}]}]},{"data":{"id":"davqocctrfk0","created":1750867349501,"text":"IO控制器","expandState":"collapse"},"children":[{"data":{"id":"dawzx7w2cgo0","created":1750994995004,"text":"主要功能"},"children":[{"data":{"id":"dawzxp42evk0","created":1750995032493,"text":"接受和识别CPU发出的命令（要有控制寄存器）"},"children":[]},{"data":{"id":"dawzy2n7fmw0","created":1750995061948,"text":"向CPU报告设备的状态（要有状态寄存器）"},"children":[]},{"data":{"id":"dawzyj27v2w0","created":1750995097684,"text":"数据交换（要有数据寄存器，暂存输入/输出的数据）"},"children":[]},{"data":{"id":"dawzz4sn89k0","created":1750995144995,"text":"地址识别（由I/O逻辑实现）"},"children":[]}]},{"data":{"id":"dawzxdxwfe80","created":1750995008175,"text":"组成"},"children":[{"data":{"id":"dawzze1zwrs0","created":1750995165151,"text":"CPU与控制器之间的接口（实现控制器与CPU之间的通信）"},"children":[]},{"data":{"id":"dawzzy3k8u00","created":1750995208781,"text":"I/O逻辑（负责识别CPU发出的命令，并向设备发出命令）"},"children":[]},{"data":{"id":"dax01eicjw00","created":1750995322868,"text":"控制器与设备之间的接口（实现控制器与设备之间的通信）"},"children":[]}]},{"data":{"id":"dawzxfzorm80","created":1750995012637,"text":"两种寄存器编码地址"},"children":[{"data":{"id":"dax01xjvhy80","created":1750995364319,"text":"内存映射I/O"},"children":[{"data":{"id":"dax02tztbkg0","created":1750995434940,"text":"控制器中的寄存器与内存统一编制"},"children":[]},{"data":{"id":"dax039lphr40","created":1750995468916,"text":"可以采用对内存进行操作的指令来对控制器进行操作"},"children":[]}]},{"data":{"id":"dax023n3fq80","created":1750995377575,"text":"寄存器独立编制"},"children":[{"data":{"id":"dax03yqtpt40","created":1750995523645,"text":"控制器中的寄存器独立编制"},"children":[]},{"data":{"id":"dax047dwt7k0","created":1750995542455,"text":"需要设置专门的指令来操作控制器"},"children":[]}]}]}]},{"data":{"id":"davqok0kumg0","created":1750867366175,"text":"IO控制方式","expandState":"collapse"},"children":[{"data":{"id":"dax05krneqo0","created":1750995649948,"text":"程序直接控制方式"},"children":[]},{"data":{"id":"dax05qu6e7s0","created":1750995663162,"text":"中断驱动方式"},"children":[]},{"data":{"id":"dax05xvzecg0","created":1750995678508,"text":"DMA方式"},"children":[]},{"data":{"id":"dax065n4p680","created":1750995695387,"text":"通道控制方式"},"children":[]}]},{"data":{"id":"davqotk7wrk0","created":1750867386953,"text":"IO软件层次结构"},"children":[]},{"data":{"id":"davqp27l8140","created":1750867405780,"text":"输入/输出应用程序接口和驱动程序接口","expandState":"collapse"},"children":[{"data":{"id":"dax07m3p2r40","created":1750995809582,"text":"输入/输出应用程序接口"},"children":[{"data":{"id":"dax08a0kqoo0","created":1750995861636,"text":"字符设备接口"},"children":[]},{"data":{"id":"dax08f06gww0","created":1750995872496,"text":"块设备接口"},"children":[]},{"data":{"id":"dax08io5u4w0","created":1750995880476,"text":"网络设备接口"},"children":[]},{"data":{"id":"dax08mxhzug0","created":1750995889748,"text":"概念：什么是 阻塞/非阻塞 I/O"},"children":[]}]},{"data":{"id":"dax0822los80","created":1750995844344,"text":"设备驱动程序接口"},"children":[]}]}]},{"data":{"id":"dao0vmwmprs0","created":1750083652461,"text":"设备独立性软件","expandState":"expand"},"children":[{"data":{"id":"davqpb15clc0","created":1750867424982,"text":"IO核心子系统"},"children":[]},{"data":{"id":"davqpiuk1s00","created":1750867441998,"text":"假脱机技术","expandState":"collapse"},"children":[{"data":{"id":"dax0dgythao0","created":1750996268588,"text":"脱机技术"},"children":[{"data":{"id":"dax0dss72i80","created":1750996294309,"text":"外围控制机+更高速的设备——磁带"},"children":[]},{"data":{"id":"dax0e7lkzm80","created":1750996326560,"text":"作用：缓解设备与CPU的速度矛盾，实现预输入、缓输出"},"children":[]}]},{"data":{"id":"dax0dkuiglk0","created":1750996277034,"text":"假脱机技术"},"children":[{"data":{"id":"dax0f3qjcgg0","created":1750996396517,"text":"又叫SPOOLing技术，用技术的方式模拟脱机技术"},"children":[]},{"data":{"id":"dax0fiomcag0","created":1750996429053,"text":"输入井和输出井——模拟脱机输入/输出时的磁带"},"children":[]},{"data":{"id":"dax0g7uitdc0","created":1750996483829,"text":"输入进程和输出进程——模拟脱机输入/输出时的外围控制机"},"children":[]},{"data":{"id":"dax0gupng1s0","created":1750996533601,"text":"输入缓冲区和输出缓冲区——内存中的缓冲区，输入、输出时的“中转站”"},"children":[]}]},{"data":{"id":"dax0dobdm000","created":1750996284585,"text":"共享打印机"},"children":[{"data":{"id":"dax0hn4awk00","created":1750996595437,"text":"用SPOOLing技术将独占式的打印机“虚拟”成共享打印机"},"children":[]}]}]},{"data":{"id":"davqpq3gqzc0","created":1750867457774,"text":"设备的分配与回收","expandState":"collapse"},"children":[{"data":{"id":"dax1tu3k2480","created":1751000372109,"text":"应考虑的因素"},"children":[{"data":{"id":"dax1uxkynz40","created":1751000458056,"text":"固有属性"},"children":[{"data":{"id":"dax1v1fya8o0","created":1751000466460,"text":"独占设备、共享设备、虚拟设备（SPOOLing）"},"children":[]}]},{"data":{"id":"dax1vj36jio0","created":1751000504870,"text":"分配算法"},"children":[{"data":{"id":"dax1w305srk0","created":1751000548223,"text":"先来先服务、优先级高者优先、短任务优先等"},"children":[]}]},{"data":{"id":"dax1y8vxvu80","created":1751000717757,"text":"安全性"},"children":[{"data":{"id":"dax1ycvnsnk0","created":1751000726447,"text":"安全分配方式、不安全分配方式"},"children":[]}]}]},{"data":{"id":"dax1tzlvqb40","created":1751000384101,"text":"静态分配与动态分配"},"children":[{"data":{"id":"dax1yvsbl4g0","created":1751000767604,"text":"静态分配：进程运行前为其分配全部所需资源，运行结束后归还资源"},"children":[]},{"data":{"id":"dax1zt9wbwg0","created":1751000840500,"text":"动态分配：进程运行过程中动态申请设备资源"},"children":[]}]},{"data":{"id":"dax1u4zy3940","created":1751000395835,"text":"设备分配管理中的数据结构"},"children":[{"data":{"id":"dax326743c00","created":1751003846469,"text":"设备控制表（DCT）"},"children":[{"data":{"id":"dax33dfzaow0","created":1751003940606,"text":"每个设备对应一张DCT，关键字段：类型/标识符/状态/指向COCT的指针/等待队列指针"},"children":[]}]},{"data":{"id":"dax32hgyu480","created":1751003871009,"text":"控制器控制表（COCT）"},"children":[{"data":{"id":"dax340j17y00","created":1751003990857,"text":"每个控制器对应一张COCT，关键字段：状态/指向CHCT的指针/等待队列指针"},"children":[]}]},{"data":{"id":"dax32shit5s0","created":1751003894987,"text":"通道控制表（CHCT）"},"children":[{"data":{"id":"dax34x582880","created":1751004061856,"text":"每个控制器对应一张CHCT，关键字段：状态/等待队列指针"},"children":[]}]},{"data":{"id":"dax330qpnpc0","created":1751003912957,"text":"系统设备表（SDT）"},"children":[{"data":{"id":"dax35opcvb40","created":1751004121846,"text":"记录整个系统中所有设备的情况，每个设备对应一个表目，关键字段：设备类型/标识符/DCT/驱动程序入口"},"children":[]}]}]},{"data":{"id":"dax1ubu3dgo0","created":1751000410719,"text":"设备分配的步骤"},"children":[{"data":{"id":"dax250n1bc00","created":1751001248353,"text":"1、根据进程请求的物理设备名查找SDT；2、根据SDT找到DCT并分配设备；3、根据DCT找到COCT并分配控制器；4、根据COCT找到CHCT并分配通道"},"children":[]},{"data":{"id":"dax2zd20z0g0","created":1751003626306,"text":"注：只有设备、控制器、通道三者都分配成功时，这次设备分配才算成功，之后便可启动I/O设备进行数据传送"},"children":[]},{"data":{"id":"dax30i11c7c0","created":1751003715494,"text":"缺点：用户编程时必须使用“物理设备名”，若换了一个物理设备，则程序无法运行。若进程请求的物理设备正在忙碌，则即使系统中还有同类型的设备，进程也必须阻塞等待"},"children":[]}]},{"data":{"id":"dax1uh2shcw0","created":1751000422129,"text":"设备分配步骤的改进"},"children":[{"data":{"id":"dax20gnfah40","created":1751000891384,"text":"用户编程时使用逻辑设备名申请设备，操作系统负责实现从逻辑设备名到物理设备名的映射（通过LUT）"},"children":[]},{"data":{"id":"dax21s7d70o0","created":1751000994899,"text":"逻辑设备表的设置问题"},"children":[{"data":{"id":"dax236x4ie80","created":1751001105296,"text":"整个系统只有一张LUT：各用户所用的逻辑设备名不允许重复"},"children":[]},{"data":{"id":"dax23tyxthk0","created":1751001155471,"text":"每个用户一张LUT：各个用户的逻辑设备名可重复"},"children":[]}]}]}]},{"data":{"id":"davqpxtrbzc0","created":1750867474601,"text":"缓冲区管理","expandState":"collapse"},"children":[{"data":{"id":"dax162vz6m00","created":1750998510502,"text":"缓冲区的概念"},"children":[{"data":{"id":"dax16p0488g0","created":1750998558641,"text":"一般利用内存作为缓冲区"},"children":[]},{"data":{"id":"dax16vemk1c0","created":1750998572579,"text":"缓解CPU与设备的速度矛盾、减少对CPU的中断频率、解决数据粒度不匹配的问题、提高CPU与I/O设备之间的并行性"},"children":[]}]},{"data":{"id":"dax166mpagg0","created":1750998518648,"text":"单缓冲"},"children":[{"data":{"id":"dax18ajff740","created":1750998683885,"text":"设备——(T)——缓冲区——(M)——工作区——(C)——处理"},"children":[]},{"data":{"id":"dax18wr47fs0","created":1750998732240,"text":"处理一块数据平均耗时 Max(C,T)+M"},"children":[]},{"data":{"id":"dax19llgicw0","created":1750998786317,"text":"分析问题的初始状态：工作区满，缓冲区空"},"children":[]}]},{"data":{"id":"dax16cn8txk0","created":1750998531741,"text":"双缓冲"},"children":[{"data":{"id":"dax1a56bipc0","created":1750998828937,"text":"处理一块数据平均耗时 Max(T,C+M)"},"children":[]},{"data":{"id":"dax1b1oa7740","created":1750998899680,"text":"分析问题的初始状态：工作区空，一个缓冲区满，另一个缓冲区空"},"children":[]}]},{"data":{"id":"dax16fwgdmw0","created":1750998538829,"text":"循环缓冲"},"children":[{"data":{"id":"dax1cyasbhk0","created":1750999049062,"text":"多个缓冲区链接成循环队列，in指针指向第一个空缓冲区，out指针指向第一个满缓冲区"},"children":[]}]},{"data":{"id":"dax16kkw1800","created":1750998549013,"text":"缓冲池"},"children":[{"data":{"id":"dax1ea22tog0","created":1750999153021,"text":"三个队列：空缓冲队列、输入队列、输出队列"},"children":[]},{"data":{"id":"dax1eo9hm5k0","created":1750999183944,"text":"四种工作缓冲区"},"children":[{"data":{"id":"dax1ev3jeoo0","created":1750999198822,"text":"用于收容输入数据的工作缓冲区、用于提取输入数据的工作缓冲区"},"children":[]},{"data":{"id":"dax1fg226n40","created":1750999244445,"text":"用于收容输出数据的工作缓冲区、用于提取输出数据的工作缓冲区"},"children":[]}]}]}]}]},{"data":{"id":"dao0vngv6pk0","created":1750083653685,"text":"磁盘和固态硬盘","expandState":"expand"},"children":[{"data":{"id":"davqq6wjfu80","created":1750867494360,"text":"磁盘的结构","expandState":"collapse"},"children":[{"data":{"id":"dax1hmvsvow0","created":1750999416033,"text":"磁盘、磁道、扇区 的概念"},"children":[{"data":{"id":"dax1htvnfzk0","created":1750999431261,"text":"磁盘由表面涂有磁性物质的圆形盘片组成"},"children":[]},{"data":{"id":"dax1ig1ccx40","created":1750999479494,"text":"每个盘片被划分为一个个磁道，每个磁道又划分为一个个扇区"},"children":[]}]},{"data":{"id":"dax1j3vzejk0","created":1750999531413,"text":"如何在磁盘中读/写数据"},"children":[{"data":{"id":"dax1jidlooo0","created":1750999562953,"text":"磁头移动到目标位置，盘片旋转，对应扇区划过磁道才能完成读/写"},"children":[]}]},{"data":{"id":"dax1keh9idk0","created":1750999632832,"text":"盘面、柱面的概念"},"children":[{"data":{"id":"dax1kmvze6g0","created":1750999651136,"text":"磁盘有多个盘片“摞”起来，每个盘片有两个盘面"},"children":[]},{"data":{"id":"dax1l6antps0","created":1750999693382,"text":"所有盘面中相对位置相同的磁道组成柱面"},"children":[]}]},{"data":{"id":"dax1lscm6u00","created":1750999741390,"text":"磁盘的物理地址"},"children":[{"data":{"id":"dax1ly6tljk0","created":1750999754100,"text":"（柱面号，盘面号，扇区号）"},"children":[]}]},{"data":{"id":"dax1mczhyc00","created":1750999786309,"text":"磁盘的分类"},"children":[{"data":{"id":"dax1mgua5280","created":1750999794701,"text":"根据磁头是否可移动"},"children":[{"data":{"id":"dax1myz44480","created":1750999834175,"text":"固定头磁盘（每个磁道有一个磁头）"},"children":[]},{"data":{"id":"dax1nc3asu00","created":1750999862726,"text":"移动头磁盘（每个盘面只有一个磁头）"},"children":[]}]},{"data":{"id":"dax1mqjbgeo0","created":1750999815806,"text":"根据盘片是否可更换"},"children":[{"data":{"id":"dax1nsh36lc0","created":1750999898389,"text":"固定盘磁盘"},"children":[]},{"data":{"id":"dax1nwm7iw80","created":1750999907405,"text":"可换盘磁盘"},"children":[]}]}]}]},{"data":{"id":"davqqdsceig0","created":1750867509344,"text":"磁盘调度算法","expandState":"collapse"},"children":[{"data":{"id":"dax37h78deo0","created":1751004262241,"text":"一次磁盘读/写操作需要的时间"},"children":[{"data":{"id":"dax37rs6yi80","created":1751004285276,"text":"寻找时间（寻道时间）：启动磁臂、移动磁头所花的时间（磁盘调度算法影响的指标）"},"children":[]},{"data":{"id":"dax38qlu7so0","created":1751004361080,"text":"延迟时间：将目标扇区转到磁头下面所花的时间"},"children":[]},{"data":{"id":"dax395vsym80","created":1751004394334,"text":"传输时间：读/写 数据花费的时间"},"children":[]}]},{"data":{"id":"dax39idkets0","created":1751004421529,"text":"磁盘调度算法"},"children":[{"data":{"id":"dax39mrn2hs0","created":1751004431087,"text":"先来先服务（FCFS）"},"children":[{"data":{"id":"dax39wikfcg0","created":1751004452307,"text":"按访问请求到达的先后顺序进行处理"},"children":[]}]},{"data":{"id":"dax3a6rqsls0","created":1751004474629,"text":"最短寻找时间优先（SSTF）"},"children":[{"data":{"id":"dax3aifp24w0","created":1751004500022,"text":"每次都优先响应距离磁头最近的磁道访问请求"},"children":[]},{"data":{"id":"dax3ayy5p9c0","created":1751004535967,"text":"贪心算法的思想，能保证眼前最优，但无法保证总的寻道时间最短"},"children":[]},{"data":{"id":"dax3bibdadc0","created":1751004578125,"text":"缺点：可能导致饥饿"},"children":[]}]},{"data":{"id":"dax3bsasbb40","created":1751004599857,"text":"扫描算法（电梯算法、SCAN）"},"children":[{"data":{"id":"dax3cn7ukr40","created":1751004667160,"text":"只有磁头移动到最边缘的磁道时才可以改变磁头移动方向"},"children":[]},{"data":{"id":"dax3d98ios00","created":1751004715090,"text":"缺点：对各个位置磁道的响应频率不平均"},"children":[]}]},{"data":{"id":"dax3c4l0qxc0","created":1751004626598,"text":"循环扫描算法（C-SCAN）"},"children":[{"data":{"id":"dax3do0h4800","created":1751004747255,"text":"只有磁头朝某个方向移动时才会响应请求，移动到边缘后立即让磁头返回起点，返回途中不响应任何请求"},"children":[]}]},{"data":{"id":"dax3cf4ww540","created":1751004649568,"text":"低频考点"},"children":[{"data":{"id":"dax3epg282w0","created":1751004828738,"text":"LOOK算法"},"children":[{"data":{"id":"dax3exaptk00","created":1751004845830,"text":"SCAN算法的改进，只要在磁头移动方向上不再有请求，就立即改变磁头方向"},"children":[]}]},{"data":{"id":"dax3fkq6el40","created":1751004896830,"text":"C-LOOK算法"},"children":[{"data":{"id":"dax3fpvdbpk0","created":1751004908028,"text":"C-SCAN算法的改进，只要在磁头移动方向上不再有请求，就立即让磁头返回"},"children":[]}]},{"data":{"id":"dax3gdzfegw0","created":1751004960516,"text":"若题目中无特别说明，则SCAN就是LOOK，C-SCAN就是C-LOOK"},"children":[]}]}]}]},{"data":{"id":"davqqka9xpc0","created":1750867523489,"text":"减少磁盘延迟时间的方法","expandState":"collapse"},"children":[{"data":{"id":"dax0w8cs0140","created":1750997738761,"text":"交替编号"},"children":[{"data":{"id":"dax0wqoyzfc0","created":1750997778679,"text":"具体做法：让编号相邻的扇区在物理上不相邻"},"children":[]},{"data":{"id":"dax1140prio0","created":1750998121144,"text":"原理：读取完一个扇区后需要一段时间处理才可以继续读入下一个扇区"},"children":[]}]},{"data":{"id":"dax0wc95ipk0","created":1750997747248,"text":"错位命名"},"children":[{"data":{"id":"dax127gv1y80","created":1750998207015,"text":"具体做法：让相邻盘面的扇区编号“错位”"},"children":[]},{"data":{"id":"dax12jwvcv40","created":1750998234104,"text":"原理：与“交替编号”的原理相同。“错位命名法”可降低延迟时间"},"children":[]}]},{"data":{"id":"dax0wfu8ra80","created":1750997755053,"text":"磁盘地址结构的设计"},"children":[{"data":{"id":"dax13lsdvwo0","created":1750998316551,"text":"理解为什么要用（柱面号，盘面号，扇区号）的结构"},"children":[]},{"data":{"id":"dax144lsi2g0","created":1750998357511,"text":"理解为什么不用（盘面号，柱面号，扇区号）的结构"},"children":[]},{"data":{"id":"dax14xmb6x40","created":1750998420669,"text":"原因：在读取地址连续的磁盘块时，前者更不需要移动磁头"},"children":[]}]}]},{"data":{"id":"davqqrplrco0","created":1750867539654,"text":"磁盘的管理","expandState":"collapse"},"children":[{"data":{"id":"dax0n5vo3cg0","created":1750997028094,"text":"磁盘初始化"},"children":[{"data":{"id":"dax0n9ge43k0","created":1750997035878,"text":"低级格式化/物理格式化：划分扇区"},"children":[]},{"data":{"id":"dax0nkj2ypk0","created":1750997059985,"text":"磁盘分区（C盘、D盘、E盘）"},"children":[]},{"data":{"id":"dax0nxh4sg00","created":1750997088165,"text":"逻辑格式化：建立文件系统（建立根目录文件、建立用于存储空间管理的数据结构）"},"children":[]}]},{"data":{"id":"dax0p8i8ako0","created":1750997190540,"text":"引导块"},"children":[{"data":{"id":"dax0pcv28fc0","created":1750997200023,"text":"计算机启动时需要运行初始化程序（自举程序）来完成初始化"},"children":[]},{"data":{"id":"dax0q1njtk00","created":1750997253989,"text":"ROM中存放很小的自举装入程序"},"children":[]},{"data":{"id":"dax0qd6b8280","created":1750997279068,"text":"完整的自举程序存放在初始块（引导块）中"},"children":[]}]},{"data":{"id":"dax0rhy969k0","created":1750997367829,"text":"坏块的管理"},"children":[{"data":{"id":"dax0rrwllr40","created":1750997389496,"text":"简单的磁盘：逻辑格式化时将坏块标记出来"},"children":[]},{"data":{"id":"dax0s9kfc4w0","created":1750997427942,"text":"复杂的磁盘：磁盘控制器维护一个坏块连，并管理备用扇区"},"children":[]}]}]},{"data":{"id":"davqqz6scu80","created":1750867555930,"text":"固态硬盘SSD","expandState":"collapse"},"children":[{"data":{"id":"dax3q4440x40","created":1751005722673,"text":"原理"},"children":[{"data":{"id":"dax7rqsaii00","created":1751017134828,"text":"基于闪存技术 Flash Memory，属于电可擦除ROM， 即EEPROM"},"children":[]}]},{"data":{"id":"dax3q6oxmug0","created":1751005728286,"text":"组成"},"children":[{"data":{"id":"dax7soob67c0","created":1751017208598,"text":"闪存翻译层"},"children":[{"data":{"id":"dax7sy9rkyg0","created":1751017229487,"text":"负责翻译逻辑块号，找到对应页（Page）"},"children":[]},{"data":{"id":"dax7tj4ii3k0","created":1751017274882,"text":"存储介质：多个闪存芯片（Flash Chip）"},"children":[{"data":{"id":"dax7u60d5t40","created":1751017324697,"text":"每个芯片包含多个块（block）"},"children":[{"data":{"id":"dax7uhiawy80","created":1751017349726,"text":"每个块包含多个页（Page）"},"children":[]}]}]}]}]},{"data":{"id":"dax3q8bbz340","created":1751005731817,"text":"读写性能特性"},"children":[{"data":{"id":"dax7vbgjm280","created":1751017414923,"text":"以页（Page）为单位读/写"},"children":[{"data":{"id":"dax7vqut1x40","created":1751017448437,"text":"相当于磁盘的”扇区“"},"children":[]}]},{"data":{"id":"dax7w1ri0x40","created":1751017472182,"text":"以块（block）为单位“擦除”，擦干净的块，其中的每页都可以写一次，读无数次"},"children":[]},{"data":{"id":"dax7x06egp40","created":1751017547094,"text":"支持随机访问，系统给定一个逻辑地址，闪存翻译层可通过电路迅速定位到对应的物理地址"},"children":[]},{"data":{"id":"dax7xva254g0","created":1751017614795,"text":"读快，写慢。要写的页如果有数据，则不能写入，需要将块内其他页全部复制到一个新的（擦除过的）块中，再写入新的页"},"children":[]}]},{"data":{"id":"dax3qd1rkns0","created":1751005742123,"text":"与机械硬盘相比的特点"},"children":[{"data":{"id":"dax7z4lfk740","created":1751017713438,"text":"SSD读写速度快，随机访问性能高，用电路控制访问位置；机械硬盘通过移动磁臂旋转磁盘控制访问位置，有寻道时间和旋转延迟"},"children":[]},{"data":{"id":"dax809m58g00","created":1751017802729,"text":"SSD安静无噪音、耐摔抗震、能耗低、造价更贵"},"children":[]},{"data":{"id":"dax80tunfm00","created":1751017846779,"text":"SSD的一个“块”被擦除次数过多（重复写同一个块）可能会坏掉，而机械硬盘的扇区不会因为写的次数太多而坏掉"},"children":[]}]},{"data":{"id":"dax3qmz9mqw0","created":1751005763739,"text":"磨损均衡技术"},"children":[{"data":{"id":"dax81yrh4g80","created":1751017935835,"text":"思想：将“擦除”平均分布在各个块上，以提升使用寿命"},"children":[]},{"data":{"id":"dax82j18zr40","created":1751017979962,"text":"动态磨损均衡"},"children":[{"data":{"id":"dax82qn8p7k0","created":1751017996529,"text":"写入数据时，优先选择累计擦除次数少的新闪存块"},"children":[]}]},{"data":{"id":"dax83b5v9080","created":1751018041191,"text":"静态磨损均衡"},"children":[{"data":{"id":"dax83g712e00","created":1751018052145,"text":"SSD监测并自动进行数据分配、迁移，让老旧的闪存块承担以读为主的储存任务，让较新的闪存块承担更多的写任务"},"children":[]}]}]}]}]}]}]},"template":"default","theme":"fresh-blue","version":"1.4.43"}